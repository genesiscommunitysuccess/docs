"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[39709],{73759:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var s=a(87462),r=a(63366),i=(a(67294),a(3905)),n=(a(61839),["components"]),o={title:"Postgres data pipeline - Prepare the Source Data",sidebar_label:"Prepare the Source Data",sidebar_position:3,id:"source-data",keywords:["getting started","quick start","postgres data pipeline","source data"],tags:["getting started","quick start","postgres data pipeline","source data"]},l=void 0,d={unversionedId:"getting-started/use-cases/postgres-data-pipeline/source-data",id:"version-2022.3/getting-started/use-cases/postgres-data-pipeline/source-data",title:"Postgres data pipeline - Prepare the Source Data",description:"The source data comes from a PostgreSQL server that has to meet the minimal configuration mentioned here.",source:"@site/versioned_docs/version-2022.3/01_getting-started/05_use-cases/postgres-data-pipeline/02_prepare-database.md",sourceDirName:"01_getting-started/05_use-cases/postgres-data-pipeline",slug:"/getting-started/use-cases/postgres-data-pipeline/source-data",permalink:"/getting-started/use-cases/postgres-data-pipeline/source-data",draft:!1,tags:[{label:"getting started",permalink:"/tags/getting-started"},{label:"quick start",permalink:"/tags/quick-start"},{label:"postgres data pipeline",permalink:"/tags/postgres-data-pipeline"},{label:"source data",permalink:"/tags/source-data"}],version:"2022.3",sidebarPosition:3,frontMatter:{title:"Postgres data pipeline - Prepare the Source Data",sidebar_label:"Prepare the Source Data",sidebar_position:3,id:"source-data",keywords:["getting started","quick start","postgres data pipeline","source data"],tags:["getting started","quick start","postgres data pipeline","source data"]},sidebar:"learningSidebar",previous:{title:"Create Genesis Dictionary",permalink:"/getting-started/use-cases/postgres-data-pipeline/dictionary"},next:{title:"Declare Source and Mappers",permalink:"/getting-started/use-cases/postgres-data-pipeline/mappers"}},p={},c=[{value:"PostgreSQL in Docker",id:"postgresql-in-docker",level:2},{value:"Database Table",id:"database-table",level:2}],g={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,n);return(0,i.kt)("wrapper",(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The source data comes from a PostgreSQL server that has to meet the minimal configuration mentioned ",(0,i.kt)("a",{parentName:"p",href:"/server/integration/data-pipeline/advanced/#postgresql-configuration-1"},"here"),"."),(0,i.kt)("h2",{id:"postgresql-in-docker"},"PostgreSQL in Docker"),(0,i.kt)("p",null,"Docker is a simple way to start playing with a local database and data pipelines. To capture changes from PostgreSQL, the Write Ahead Log level has to be set at least to ",(0,i.kt)("inlineCode",{parentName:"p"},"logical"),". By default, the PostgreSQL docker image has its Log Level set at level lower than this; thus you must specify it explicitly when the image is run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -tid -p 5432:5432 -e POSTGRES_PASSWORD=docker -e PGDATA=/tmp postgres:12.6-alpine -c wal_level=logical\n")),(0,i.kt)("h2",{id:"database-table"},"Database Table"),(0,i.kt)("p",null,"Following is the SQL to create the table that will be used as a data source. Any record inserted in the table will be processed by the data pipeline in the Genesis platform:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TYPE valid_sides AS ENUM ('buy', 'sell');\nCREATE TYPE valid_states AS ENUM ('new', 'mod', 'canc');\n\nCREATE TABLE trades (\n  trd_id  VARCHAR ( 12 ) PRIMARY KEY,\n  inst VARCHAR ( 5 ) NOT NULL,\n  price DOUBLE PRECISION NOT NULL,\n  quantity INTEGER NOT NULL,\n  side VALID_SIDES NOT NULL,\n  traded_at TIMESTAMP NOT NULL,\n  trader VARCHAR (30) NOT NULL,\n  trade_state valid_states NOT NULL,\n  unsolicited BOOL,\n  orig_trd_id VARCHAR (12),\n  trade_notes VARCHAR (500)\n);\n")))}u.isMDXComponent=!0}}]);