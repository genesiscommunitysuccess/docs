"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[92607],{43696:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return o}});var s=a(87462),n=a(63366),r=(a(67294),a(3905)),i=(a(61839),["components"]),l={title:"Faster quick start - Add business logic",sidebar_label:"Add business logic",id:"add-business-logic",keywords:["getting started","quick start","faster quick start","business logic","dataserver","event handler"],tags:["getting started","quick start","faster quick start","business logic","dataserver","event handler"]},d=void 0,u={unversionedId:"getting-started/use-cases/faster_quick-start/add-business-logic",id:"getting-started/use-cases/faster_quick-start/add-business-logic",title:"Faster quick start - Add business logic",description:"We have a table; now we want to be able to see its content and create new entries.",source:"@site/docs/01_getting-started/05_use-cases/09_faster_quick-start/04_add-business-logic.md",sourceDirName:"01_getting-started/05_use-cases/09_faster_quick-start",slug:"/getting-started/use-cases/faster_quick-start/add-business-logic",permalink:"/next/getting-started/use-cases/faster_quick-start/add-business-logic",draft:!1,tags:[{label:"getting started",permalink:"/next/tags/getting-started"},{label:"quick start",permalink:"/next/tags/quick-start"},{label:"faster quick start",permalink:"/next/tags/faster-quick-start"},{label:"business logic",permalink:"/next/tags/business-logic"},{label:"dataserver",permalink:"/next/tags/dataserver"},{label:"event handler",permalink:"/next/tags/event-handler"}],version:"current",sidebarPosition:4,frontMatter:{title:"Faster quick start - Add business logic",sidebar_label:"Add business logic",id:"add-business-logic",keywords:["getting started","quick start","faster quick start","business logic","dataserver","event handler"],tags:["getting started","quick start","faster quick start","business logic","dataserver","event handler"]},sidebar:"learningSidebar",previous:{title:"Define the data model",permalink:"/next/getting-started/use-cases/faster_quick-start/define-the-data-model"},next:{title:"Prepare processes and services",permalink:"/next/getting-started/use-cases/faster_quick-start/prepare-processes-and-services"}},c={},o=[{value:"Data Server",id:"data-server",level:3},{value:"Event Handler",id:"event-handler",level:3}],g={toc:o};function k(e){var t=e.components,a=(0,n.Z)(e,i);return(0,r.kt)("wrapper",(0,s.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We have a table; now we want to be able to see its content and create new entries."),(0,r.kt)("h3",{id:"data-server"},"Data Server"),(0,r.kt)("p",null,"A Data Server allows for reading of real-time data. You must define the Data Server in the file ",(0,r.kt)("strong",{parentName:"p"},"alpha-dataserver.kts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'dataServer {\n    query("ALL_TRADES", TRADE)\n}\n')),(0,r.kt)("h3",{id:"event-handler"},"Event Handler"),(0,r.kt)("p",null,"Next, we want to be able to insert rows into our table. For this, you need to define an Event Handler in the file ",(0,r.kt)("strong",{parentName:"p"},"alpha-eventhandler.kts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'eventHandler {\n\n    eventHandler<Trade>(name = "TRADE_INSERT") {\n        onCommit { event ->\n            entityDb.insert(event.details)\n            ack()\n        }\n    }\n\n}\n')))}k.isMDXComponent=!0}}]);