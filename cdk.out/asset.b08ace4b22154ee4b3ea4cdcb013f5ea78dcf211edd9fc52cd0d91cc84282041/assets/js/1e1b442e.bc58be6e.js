"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[99379],{74421:function(e){e.exports=JSON.parse('{"label":"quick start","permalink":"/next/tags/quick-start","allTagsPath":"/next/tags","count":55,"items":[{"id":"getting-started/developer-training/training-content-day5","title":"Developer training - Day five","description":"Day four recap","permalink":"/next/getting-started/developer-training/training-content-day5"},{"id":"getting-started/developer-training/training-content-day4","title":"Developer training - Day four","description":"Day three recap","permalink":"/next/getting-started/developer-training/training-content-day4"},{"id":"getting-started/developer-training/training-content-day1","title":"Developer training - Day one","description":"This day covers:","permalink":"/next/getting-started/developer-training/training-content-day1"},{"id":"getting-started/developer-training/training-content-day3","title":"Developer training - Day three","description":"Day two recap","permalink":"/next/getting-started/developer-training/training-content-day3"},{"id":"getting-started/developer-training/training-content-day2","title":"Developer training - Day two","description":"Day one recap","permalink":"/next/getting-started/developer-training/training-content-day2"},{"id":"getting-started/developer-training/environment-setup","title":"Developer training - Environment setup","description":"---","permalink":"/next/getting-started/developer-training/environment-setup"},{"id":"getting-started/developer-training/fundamentals","title":"Developer training - Fundamentals","description":"Creating financial markets technology today is fundamentally broken \u2013 too slow, expensive and high-risk. Genesis is revolutionising software delivery within the financial markets so that any coder can create reactive, performant and compliant applications in days.","permalink":"/next/getting-started/developer-training/fundamentals"},{"id":"getting-started/developer-training/training-intro","title":"Developer training - Introduction","description":"What you\'ll learn\u200b","permalink":"/next/getting-started/developer-training/training-intro"},{"id":"getting-started/use-cases/excel-to-genesis/quick-guide","title":"Excel to genesis - Quick guide","description":"Introduction","permalink":"/next/getting-started/use-cases/excel-to-genesis/"},{"id":"getting-started/use-cases/faster_quick-start/add-business-logic","title":"Faster quick start - Add business logic","description":"We have a table; now we want to be able to see its content and create new entries.","permalink":"/next/getting-started/use-cases/faster_quick-start/add-business-logic"},{"id":"getting-started/use-cases/faster_quick-start/create-a-new-project","title":"Faster quick start - Create a new project","description":"The GenX CLI tool enables you to seed projects. In this case, we just want to generate a blank full-stack application project.","permalink":"/next/getting-started/use-cases/faster_quick-start/create-a-new-project"},{"id":"getting-started/use-cases/faster_quick-start/create-a-user-interface","title":"Faster quick start - Create a user interface","description":"Create a user interface","permalink":"/next/getting-started/use-cases/faster_quick-start/create-a-user-interface"},{"id":"getting-started/use-cases/faster_quick-start/define-the-data-model","title":"Faster quick start - Define the data model","description":"Now you are ready to define the fields and tables that make up your data model. This structures information in a simple way that can be viewed by users and processed by the application.","permalink":"/next/getting-started/use-cases/faster_quick-start/define-the-data-model"},{"id":"getting-started/use-cases/faster_quick-start/prepare-processes-and-services","title":"Faster quick start - Prepare processes and services","description":"The application has two files that contain vital configuration information:","permalink":"/next/getting-started/use-cases/faster_quick-start/prepare-processes-and-services"},{"id":"getting-started/use-cases/faster_quick-start/run-the-application","title":"Faster quick start - Run the application","description":"Building and composing Docker images","permalink":"/next/getting-started/use-cases/faster_quick-start/run-the-application"},{"id":"getting-started/go-to-the-next-level/add-some-data","title":"Go to the next level - Add some data","description":"Add a user and some example data","permalink":"/next/getting-started/go-to-the-next-level/add-some-data"},{"id":"getting-started/go-to-the-next-level/calculated-data","title":"Go to the next level - Calculated data using derived fields","description":"Section objectives","permalink":"/next/getting-started/go-to-the-next-level/calculated-data"},{"id":"getting-started/go-to-the-next-level/camel","title":"Go to the next level - Camel integrations","description":"The Genesis low-code platform supports the use of Apache Camel in order to integrate with external systems, using its plethora of components.","permalink":"/next/getting-started/go-to-the-next-level/camel"},{"id":"getting-started/go-to-the-next-level/charts","title":"Go to the next level - Create a chart","description":"Section objectives","permalink":"/next/getting-started/go-to-the-next-level/charts"},{"id":"getting-started/go-to-the-next-level/forms","title":"Go to the next level - Create a form to input data","description":"Section objectives","permalink":"/next/getting-started/go-to-the-next-level/forms"},{"id":"getting-started/go-to-the-next-level/customize-look-and-feel","title":"Go to the next level - Customise look and feel using layout and styles","description":"Section objectives","permalink":"/next/getting-started/go-to-the-next-level/customize-look-and-feel"},{"id":"getting-started/go-to-the-next-level/consolidators","title":"Go to the next level - Data Aggregation using Consolidator","description":"Following from the calculated data using derived fields, the Genesis low-code platform provides a more advanced feature to aggregate data or perform calculations whenever the underlying data is changed. That feature is called Consolidator.","permalink":"/next/getting-started/go-to-the-next-level/consolidators"},{"id":"getting-started/go-to-the-next-level/data-model","title":"Go to the next level - Define the data model using fields, tables and views","description":"Following on from project creation in the previous step, you have:","permalink":"/next/getting-started/go-to-the-next-level/data-model"},{"id":"getting-started/go-to-the-next-level/data-pipeline","title":"Go to the next level - Ingest external data","description":"So far, we have only directed you towards manual data ingestion techniques, using gradle tasks, forms, SendIt, Genesis Console or Postman.","permalink":"/next/getting-started/go-to-the-next-level/data-pipeline"},{"id":"getting-started/go-to-the-next-level/introduction","title":"Go to the next level - Introduction","description":"Now that you have completed the Quick Start and are comfortable with the basics, we\'ll build an advanced application that will demonstrate more of the Genesis platform features.","permalink":"/next/getting-started/go-to-the-next-level/introduction"},{"id":"getting-started/go-to-the-next-level/micro-frontends","title":"Go to the next level - Micro-frontends","description":"Section objectives","permalink":"/next/getting-started/go-to-the-next-level/micro-frontends"},{"id":"getting-started/go-to-the-next-level/run-the-application-docker","title":"Go to the next level - Run the application (Docker)","description":"The instructions on this page are for using Docker. If you prefer to use WSL/CentOS as your environment, there are separate instructions.","permalink":"/next/getting-started/go-to-the-next-level/run-the-application-docker"},{"id":"getting-started/go-to-the-next-level/run-the-application-wsl","title":"Go to the next level - Run the application (WSL/CentOS)","description":"The instructions on this page are for using WSL/CentOS. If you prefer to use Docker as your environment, there are separate instructions.","permalink":"/next/getting-started/go-to-the-next-level/run-the-application-wsl"},{"id":"getting-started/go-to-the-next-level/setting-genesis-evaluator-rules","title":"Go to the next level - Setting Genesis Evaluator rules","description":"It is often useful to run tasks periodically - for example, to schedule the production of EOD reports, or to send a warning when a defined limit is reached. For such purposes, the Genesis low-code platform provides a feature called the Evaluator. In system terms, Evaluators enable you to connect Event Handlers to two different kinds of event","permalink":"/next/getting-started/go-to-the-next-level/setting-genesis-evaluator-rules"},{"id":"getting-started/go-to-the-next-level/data-grid","title":"Go to the next level - Show data using Data Grid","description":"Prerequisites","permalink":"/next/getting-started/go-to-the-next-level/data-grid"},{"id":"getting-started/go-to-the-next-level/state-management","title":"Go to the next level - State Management","description":"State machines enable you to control workflow by defining the transitions from state to state. This example enables you to build a very simple state machine so that you can add new trades. We shall use the TRADE_STATUS field, which can have three possible states: NEW, ALLOCATED, or CANCELLED.","permalink":"/next/getting-started/go-to-the-next-level/state-management"},{"id":"getting-started/go-to-the-next-level/audit","title":"Go to the next level - Track the data changes using Auditable Tables","description":"We want to be able to track the changes made to the various trades on the TRADE table, such that we are able to see the times and modifications made during the history of the trade. So, we are going to add basic auditing to the TRADE table to keep a record of the changing states of the trades.","permalink":"/next/getting-started/go-to-the-next-level/audit"},{"id":"getting-started/go-to-the-next-level/events","title":"Go to the next level - User interaction using Data Servers, Request Servers and Event Handlers","description":"Now that we have our data model defined, we can start adding the capabilities to read and create entries.","permalink":"/next/getting-started/go-to-the-next-level/events"},{"id":"getting-started/use-cases/loading-feed-data/example-source-data","title":"Loading feed data - Example source data","description":"Here is an edited example of a source file of issuance data from the Bloomberg feed.","permalink":"/next/getting-started/use-cases/loading-feed-data/example-source-data"},{"id":"getting-started/use-cases/loading-feed-data/overview","title":"Loading feed data - How to load feed data into an application","description":"Some feeds provide static sets of data that you can download for processing by your application. A good example is traded data from an exchange. This exercise shows you the key points for loading these data files. In this case, we shall use Bloomberg issuance data. We shall load this, parse it to reformat it to Genesis format, then place it in a staging table in a Genesis application. Once it is in the staging table, the data can be passed to other tables within the application.","permalink":"/next/getting-started/use-cases/loading-feed-data/overview"},{"id":"getting-started/use-cases/loading-feed-data/sftp-and-encryption","title":"Loading feed data - SFTP and encryption","description":"If you are loading static data from an external site, this page gives more detail on the SFTP method for obtaining the data. It also looks at how you could deal with encryption and decryption in higher environments.","permalink":"/next/getting-started/use-cases/loading-feed-data/sftp-and-encryption"},{"id":"getting-started/use-cases/postgres-data-pipeline/conclusion","title":"Postgres data pipeline - Conclusion","description":"In this tutorial you saw how to integrate with an external PostgreSQL server using the Genesis Data Pipeline configuration.","permalink":"/next/getting-started/use-cases/postgres-data-pipeline/conclusion"},{"id":"getting-started/use-cases/postgres-data-pipeline/dictionary","title":"Postgres data pipeline - Create Genesis Dictionary","description":"Create new Genesis project","permalink":"/next/getting-started/use-cases/postgres-data-pipeline/dictionary"},{"id":"getting-started/use-cases/postgres-data-pipeline/mappers","title":"Postgres data pipeline - Declare Source and Mappers","description":"In this part of the tutorial we will declare the PostgreSQL server as a data source and map the incoming rows to a Genesis Table object.","permalink":"/next/getting-started/use-cases/postgres-data-pipeline/mappers"},{"id":"getting-started/use-cases/postgres-data-pipeline/deploy","title":"Postgres data pipeline - Deploy the Application","description":"To deploy your application to your local Linux or WSL environment, see this guide.","permalink":"/next/getting-started/use-cases/postgres-data-pipeline/deploy"},{"id":"getting-started/use-cases/postgres-data-pipeline/source-data","title":"Postgres data pipeline - Prepare the Source Data","description":"The source data comes from a PostgreSQL server that has to meet the minimal configuration mentioned here.","permalink":"/next/getting-started/use-cases/postgres-data-pipeline/source-data"},{"id":"getting-started/prerequisites/genx","title":"Prerequisites - Genx","description":"The GenesisX CLI GenX is a command-line interface tool that you can use to scaffold Genesis applications and workspaces directly from a terminal.","permalink":"/next/getting-started/prerequisites/genx"},{"id":"getting-started/prerequisites/gradle-deploy-plugin","title":"Prerequisites - Gradle deploy plugin","description":"The Genesis low-code platform provides a Gradle plugin that makes it easy to perform all the installation tasks that are","permalink":"/next/getting-started/prerequisites/gradle-deploy-plugin"},{"id":"getting-started/prerequisites/installing-wsl","title":"Prerequisites - Installing WSL","description":"If you don\'t have a Linux box for running your Genesis platform, you can use Windows Subsystem for Linux (WSL2) to install a Linux environment on your Windows machine.","permalink":"/next/getting-started/prerequisites/installing-wsl"},{"id":"getting-started/prerequisites/introduction","title":"Prerequisites - Introduction","description":"To set up a full-functioning developer workstation, you need to check out the hardware and software requirements first. It\'s worth checking through all the rest of these pages after that.","permalink":"/next/getting-started/prerequisites/introduction"},{"id":"getting-started/prerequisites/manual-installation","title":"Prerequisites - Manual installation","description":"To install the Genesis low-code platform on your server, go through the following steps.","permalink":"/next/getting-started/prerequisites/manual-installation"},{"id":"getting-started/quick-start/introduction","title":"Quick Start","description":"What you will build","permalink":"/next/getting-started/quick-start/"},{"id":"getting-started/quick-start/add-business-logic","title":"Quick Start - Add business logic","description":"We have a table; now we want to be able to see its content and create new entries.","permalink":"/next/getting-started/quick-start/add-business-logic"},{"id":"getting-started/quick-start/create-a-new-project","title":"Quick Start - Create a new project","description":"The GenX CLI tool enables you to seed projects. In this case we want to generate a blank full-stack application project.","permalink":"/next/getting-started/quick-start/create-a-new-project"},{"id":"getting-started/quick-start/create-a-user-interface","title":"Quick Start - Create a user interface","description":"Now let\'s create a single page with a grid and a form for entering data.","permalink":"/next/getting-started/quick-start/create-a-user-interface"},{"id":"getting-started/quick-start/define-the-data-model","title":"Quick Start - Define the data model","description":"Now you are ready to define the fields and tables that make up your data model. This structures information in a simple way that can be viewed by users and processed by the application.","permalink":"/next/getting-started/quick-start/define-the-data-model"},{"id":"getting-started/quick-start/hardware-and-software","title":"Quick Start - Hardware and software","description":"This page gives you the hardware and software requirements needed in order to run a development workstation for the Genesis low-code platform. It also provides instructions for accessing the Genesis repository and configuring the Genesis packages.","permalink":"/next/getting-started/quick-start/hardware-and-software"},{"id":"getting-started/quick-start/prepare-the-server-and-build","title":"Quick Start - Prepare the server & build","description":"The application has three files that contain vital configuration information:","permalink":"/next/getting-started/quick-start/prepare-the-server-and-build"},{"id":"getting-started/quick-start/run-the-application-docker","title":"Quick Start - Run the application (Docker)","description":"You have a choice of how you run the application. The instructions on this page are for using Docker. If you prefer to use WSL/CentOS as your environment, there are separate instructions.","permalink":"/next/getting-started/quick-start/run-the-application-docker"},{"id":"getting-started/quick-start/run-the-application","title":"Quick Start - Run the application (WSL/Linux)","description":"You have a choice of how you run the application. The instructions on this page are for using WSL/CentOS. If you prefer to use Docker as your environment, there are separate instructions.","permalink":"/next/getting-started/quick-start/run-the-application"}]}')}}]);