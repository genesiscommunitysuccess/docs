"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[32016],{39467:function(e,a,t){t.r(a),t.d(a,{assets:function(){return r},contentTitle:function(){return b},default:function(){return T},frontMatter:function(){return d},metadata:function(){return S},toc:function(){return o}});var n=t(87462),s=t(63366),l=(t(67294),t(3905)),i=(t(61839),["components"]),d={title:"Tables - advanced",sidebar_label:"Tables - advanced",id:"tables-advanced",keywords:["database","tables","advanced"],tags:["database","tables","advanced"]},b=void 0,S={unversionedId:"database/fields-tables-views/tables/tables-advanced",id:"version-2022.3/database/fields-tables-views/tables/tables-advanced",title:"Tables - advanced",description:"Subtables",source:"@site/versioned_docs/version-2022.3/02_database/01_fields-tables-views/02_tables/02_tables-advanced.md",sourceDirName:"02_database/01_fields-tables-views/02_tables",slug:"/database/fields-tables-views/tables/tables-advanced",permalink:"/database/fields-tables-views/tables/tables-advanced",draft:!1,tags:[{label:"database",permalink:"/tags/database"},{label:"tables",permalink:"/tags/tables"},{label:"advanced",permalink:"/tags/advanced"}],version:"2022.3",sidebarPosition:2,frontMatter:{title:"Tables - advanced",sidebar_label:"Tables - advanced",id:"tables-advanced",keywords:["database","tables","advanced"],tags:["database","tables","advanced"]},sidebar:"databaseSidebar",previous:{title:"Tables - basics",permalink:"/database/fields-tables-views/tables/tables-basics"},next:{title:"Tables - examples",permalink:"/database/fields-tables-views/tables/tables-examples"}},r={},o=[{value:"Subtables",id:"subtables",level:2}],E={toc:o};function T(e){var a=e.components,t=(0,s.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},E,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"subtables"},"Subtables"),(0,l.kt)("p",null,"A subtable provides a unique point of view on the data schema, which goes further than a simple join relationship. It gives extra functionality to a main table."),(0,l.kt)("p",null,"For example, a financial instrument can be modelled as an INSTRUMENT table, but this table on its own isn\u2019t enough to represent all the possible symbologies for an instrument. So, we could add a subtable called ALT_INSTRUMENT_ID, in which the relationship is one-to-many from INSTRUMENT to ALT_INSTRUMENT_ID."),(0,l.kt)("p",null,"ALT_INSTRUMENT_ID is likely to inherit key fields from the INSTRUMENT table, and it simply acts as a lookup table for INSTRUMENT records."),(0,l.kt)("p",null,"This requirement occurs for different tables (e.g. COUNTERPARTY \u2192 ALT_COUNTERPARTY_ID, GENESIS_PROCESS \u2192 GENESIS_PROCESS_MONITOR, etc)."),(0,l.kt)("p",null,"Subtables are defined within the body of the table definition. "),(0,l.kt)("p",null,"The example below shows the ",(0,l.kt)("inlineCode",{parentName:"p"},"GENESIS_PROCESS")," monitoring table."),(0,l.kt)("p",null,"After the fields and the primary key have been defined, you can see the subtable ",(0,l.kt)("inlineCode",{parentName:"p"},"GENESIS_PROCESS_MONITOR"),"."),(0,l.kt)("p",null,"Within this subtable, the fields that are used to generate the join operation are defined first. These fields are inherited automatically. Then the additional fields and keys are defined."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'table(name = "GENESIS_PROCESS", id = 12) {\n    PROCESS_NAME\n    PROCESS_STATUS\n    PROCESS_STATUS_MESSAGE\n    PROCESS_STATE_TEXT\n    PROCESS_RESOURCES\n    PROCESS_HOSTNAME\n    PROCESS_CPU_USAGE\n    PROCESS_MEM_USAGE\n    PROCESS_SECURE\n    PROCESS_PORT\n    LOG_LEVEL\n    DATADUMP\n    START_TIME\n    RESOURCE_TYPES\n    primaryKey {\n        PROCESS_NAME\n        PROCESS_HOSTNAME\n    }\n    subTables {\n        fields(PROCESS_HOSTNAME, PROCESS_NAME)\n            .joiningNewTable(name = "GENESIS_PROCESS_MONITOR", id = 20) {\n                MONITOR_NAME\n                MONITOR_MESSAGE\n                MONITOR_STATE\n\n            primaryKey(name = "GENESIS_PROCESS_MONITOR_BY_HOSTNAME", id = 1) {\n                    PROCESS_HOSTNAME\n                    PROCESS_NAME\n                    MONITOR_NAME\n                }\n            }\n    }\n}\n')))}T.isMDXComponent=!0}}]);