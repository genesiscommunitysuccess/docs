"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[50236],{1223:function(e,t,a){a.r(t),a.d(t,{assets:function(){return h},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=a(87462),l=a(63366),i=(a(67294),a(3905)),r=(a(61839),["components"]),o={title:"Go to the next level - Create a chart",sidebar_label:"Create a chart",id:"charts",keywords:["getting started","quick start","next level","charts"],tags:["getting started","quick start","next level","charts"]},s=void 0,c={unversionedId:"getting-started/go-to-the-next-level/charts",id:"getting-started/go-to-the-next-level/charts",title:"Go to the next level - Create a chart",description:"Section objectives",source:"@site/docs/01_getting-started/03_go-to-the-next-level/13_charting.md",sourceDirName:"01_getting-started/03_go-to-the-next-level",slug:"/getting-started/go-to-the-next-level/charts",permalink:"/next/getting-started/go-to-the-next-level/charts",draft:!1,tags:[{label:"getting started",permalink:"/next/tags/getting-started"},{label:"quick start",permalink:"/next/tags/quick-start"},{label:"next level",permalink:"/next/tags/next-level"},{label:"charts",permalink:"/next/tags/charts"}],version:"current",sidebarPosition:13,frontMatter:{title:"Go to the next level - Create a chart",sidebar_label:"Create a chart",id:"charts",keywords:["getting started","quick start","next level","charts"],tags:["getting started","quick start","next level","charts"]},sidebar:"learningSidebar",previous:{title:"Ingest external data",permalink:"/next/getting-started/go-to-the-next-level/data-pipeline"},next:{title:"Customise look and feel",permalink:"/next/getting-started/go-to-the-next-level/customize-look-and-feel"}},h={},p=[{value:"Section objectives",id:"section-objectives",level:2},{value:"Declare a chart in the UI",id:"declare-a-chart-in-the-ui",level:2},{value:"Fetching the data",id:"fetching-the-data",level:2},{value:"Conclusion",id:"conclusion",level:2}],d={toc:p};function u(e){var t=e.components,o=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"section-objectives"},"Section objectives"),(0,i.kt)("p",null,"The goal of this section is to add a data chart to the UI."),(0,i.kt)("h2",{id:"declare-a-chart-in-the-ui"},"Declare a chart in the UI"),(0,i.kt)("p",null,"Charts component is a wrapper for ",(0,i.kt)("inlineCode",{parentName:"p"},"@antv/g2plot"),", that allows you the following types: Line, Area, Bar, Column, Pie, Dual Axes, Rose."),(0,i.kt)("p",null,"You can quickly add charts to your application by adding them to ",(0,i.kt)("inlineCode",{parentName:"p"},"template")," within your route."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title='home.template.ts'",title:"'home.template.ts'"},'<zero-charts type="pie" :config=${x => x.chartsConfiguration} :data=${x => x.chartsData}></zero-charts>\n')),(0,i.kt)("p",null,"As you can see, we bind ",(0,i.kt)("inlineCode",{parentName:"p"},"chartsConfiguration"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"chartsData")," from our component definition to the ",(0,i.kt)("inlineCode",{parentName:"p"},":config")," and ",(0,i.kt)("inlineCode",{parentName:"p"},":data")," properties on the chart component."),(0,i.kt)("p",null,"Sample configuration and data for pie chart:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title='home.ts'",title:"'home.ts'"},"@observable chartsConfiguration = {\n  width: 600,\n  angleField: 'value',\n  colorField: 'type',\n  radius: 0.75,\n  label: {\n    type: 'spider',\n    labelHeight: 28,\n    content: '{name}\\n{percentage}',\n    style: {\n      fill: 'white',\n    },\n  },\n  interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\n};\n\n@observable chartsData = [\n  { type: 'Exam 1', value: 27 },\n  { type: 'Exam 2', value: 25 },\n  { type: 'Exam 3', value: 18 },\n  { type: 'Exam 4', value: 15 },\n  { type: 'Exam 5', value: 10 },\n  { type: 'Exam 6', value: 13 },\n];\n")),(0,i.kt)("p",null,"For further configuration examples please see: ",(0,i.kt)("a",{parentName:"p",href:"https://g2plot.antv.vision/en/examples/gallery"},"here"),"."),(0,i.kt)("h2",{id:"fetching-the-data"},"Fetching the data"),(0,i.kt)("p",null,"Now you will define how to fetch the data from the server."),(0,i.kt)("p",null,"To achieve this we can use ",(0,i.kt)("inlineCode",{parentName:"p"},"charts-datasource"),"."),(0,i.kt)("p",null,"Use the snippet below, where:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We start by initialising the datasource component with the requested ",(0,i.kt)("inlineCode",{parentName:"li"},"resourceName")," (",(0,i.kt)("inlineCode",{parentName:"li"},"ALL-POSITIONS"),") and the fields that we want the data for (",(0,i.kt)("inlineCode",{parentName:"li"},"INSTRUMENT NAME")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"VALUE"),")."),(0,i.kt)("li",{parentName:"ul"},"Then we specify a ",(0,i.kt)("inlineCode",{parentName:"li"},"charts-fields")," to which we want to assign the data from the API. In this case:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"type = INSTRUMENT_NAME "),(0,i.kt)("li",{parentName:"ul"},"value = VALUE"))),(0,i.kt)("li",{parentName:"ul"},"And finally we request a snapshot of the data.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="home.template.ts"',title:'"home.template.ts"'},'<zero-charts type="pie" :config=${(x) => x.chartsConfiguration}>\n  <charts-datasource\n    resourceName="ALL_POSITIONS"\n    server-fields="INSTRUMENT_NAME VALUE"\n    charts-fields="type value"\n    isSnapshot\n  ></charts-datasource>\n</zero-charts>\n')),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"You should have a data chart that resembles something like this:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(12185).Z,width:"1564",height:"818"})))}u.isMDXComponent=!0},12185:function(e,t,a){t.Z=a.p+"assets/images/charts-41cb2235eaa6d647a20038b56fbd3cde.png"}}]);