"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[56285],{85162:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(67294),l=a(86010),i="tabItem_Ymn6";function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:a},t)}},65488:function(e,t,a){a.d(t,{Z:function(){return b}});var n=a(87462),l=a(67294),i=a(86010),r=a(72389),s=a(67392),d=a(7094),u=a(12466),o="tabList__CuJ",m="tabItem_LNqP";function p(e){var t,a,r=e.lazy,p=e.block,b=e.defaultValue,c=e.values,v=e.groupId,k=e.className,f=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=c?c:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,s.l)(h,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===b?b:null!=(t=null!=b?b:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:f[0].props.value;if(null!==N&&!h.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,d.U)(),T=g.tabGroupChoices,w=g.setTabGroupChoices,E=(0,l.useState)(N),S=E[0],C=E[1],x=[],_=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var D=T[v];null!=D&&D!==S&&h.some((function(e){return e.value===D}))&&C(D)}var U=function(e){var t=e.currentTarget,a=x.indexOf(t),n=h[a].value;n!==S&&(_(t),C(n),null!=v&&w(v,String(n)))},O=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n,l=x.indexOf(e.currentTarget)+1;a=null!=(n=x[l])?n:x[0];break;case"ArrowLeft":var i,r=x.indexOf(e.currentTarget)-1;a=null!=(i=x[r])?i:x[x.length-1]}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",o)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":p},k)},h.map((function(e){var t=e.value,a=e.label,r=e.attributes;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:function(e){return x.push(e)},onKeyDown:O,onFocus:U,onClick:U},r,{className:(0,i.Z)("tabs__item",m,null==r?void 0:r.className,{"tabs__item--active":S===t})}),null!=a?a:t)}))),r?(0,l.cloneElement)(f.filter((function(e){return e.props.value===S}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==S})}))))}function b(e){var t=(0,r.Z)();return l.createElement(p,(0,n.Z)({key:String(t)},e))}},65291:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return v},frontMatter:function(){return u},metadata:function(){return m},toc:function(){return b}});var n=a(87462),l=a(63366),i=(a(67294),a(3905)),r=(a(61839),a(65488)),s=a(85162),d=["components"],u={title:"Data types - Table entities",sidebar_label:"Table entities",id:"table-entities",keywords:["database","data types","table entities"],tags:["database","data types","table entities"]},o=void 0,m={unversionedId:"database/data-types/table-entities",id:"version-2022.3/database/data-types/table-entities",title:"Data types - Table entities",description:"Table entities are classes generated by Genesis that match your applications's\xa0data model. The generated entity name is based on the table name, but will be camel case.",source:"@site/versioned_docs/version-2022.3/02_database/04_data-types/01_table-entities.md",sourceDirName:"02_database/04_data-types",slug:"/database/data-types/table-entities",permalink:"/database/data-types/table-entities",draft:!1,tags:[{label:"database",permalink:"/tags/database"},{label:"data types",permalink:"/tags/data-types"},{label:"table entities",permalink:"/tags/table-entities"}],version:"2022.3",sidebarPosition:1,frontMatter:{title:"Data types - Table entities",sidebar_label:"Table entities",id:"table-entities",keywords:["database","data types","table entities"],tags:["database","data types","table entities"]},sidebar:"databaseSidebar",previous:{title:"Data types",permalink:"/database/data-types/data-types"},next:{title:"Index entities",permalink:"/database/data-types/index-entities"}},p={},b=[{value:"Index entities",id:"index-entities",level:2},{value:"Builder",id:"builder",level:2},{value:"Auditable tables",id:"auditable-tables",level:2},{value:"Some of the most useful methods",id:"some-of-the-most-useful-methods",level:2},{value:"Examples",id:"examples",level:2}],c={toc:b};function v(e){var t=e.components,a=(0,l.Z)(e,d);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Table entities are classes generated by Genesis that match your applications's\xa0",(0,i.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields-tables-views/"},"data model"),". The generated entity name is based on the table name, but will be camel case. "),(0,i.kt)("p",null,"For example,\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"TABLE_NAME"),"\xa0becomes\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"TableName"),". "),(0,i.kt)("p",null,"All table/view entities implement a common interface called\xa0",(0,i.kt)("a",{parentName:"p",href:"/database/data-types/dbentity/"},"DbEntity"),"."),(0,i.kt)("h2",{id:"index-entities"},"Index entities"),(0,i.kt)("p",null,"Tables, like views, have\xa0",(0,i.kt)("a",{parentName:"p",href:"/database/data-types/index-entities/"},"index entities"),". There are also convenient methods that construct an index entity from the table entity.\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"byPrimaryKey()"),"\xa0will return an entity for the primary key. Additionally, for each index, there will be a\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"by...()"),"\xa0call with the index name."),(0,i.kt)("h2",{id:"builder"},"Builder"),(0,i.kt)("p",null,"All table entities come with builders to help construct these objects. In Kotlin, the builder works as a lambda in which the field values are set, and the object is built after the lambda call is completed. In Java, the builder is a fluent interface, where fields are set and the object is built in a final\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"build"),"\xa0call."),(0,i.kt)("p",null,"Just before the object is built, the object is validated to make sure all\xa0",(0,i.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields/"},"required fields"),"\xa0have been set."),(0,i.kt)(r.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'val trade = Trade {\n    tradeId = id\n    tradeType = type\n    tradeDate = DateTime.now()\n    currencyId = "USD"\n    quantity = 500\n    price = 2.0\n}\n'))),(0,i.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'Trade trade = Trade.builder()\n    .setTradeType(tradeType)\n    .setTradeId(tradeId)\n    .setTradeDate(now())\n    .setCurrencyId("USD")\n    .setQuantity(50)\n    .setPrice(2.0)\n    .build();\n')))),(0,i.kt)("h2",{id:"auditable-tables"},"Auditable tables"),(0,i.kt)("p",null,"When a table is audited, the table entity can be easily converted to its audited counterpart by calling the\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"toAuditEntity"),"\xa0function."),(0,i.kt)(r.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'val tradeAudit = trade.toAuditEntity(\n    auditEventType = "trade modify"\n    auditEventDatetime = DateTime.now(),\n    auditEventText = "trade was modified in event",\n    auditEventUser = user,\n)\n'))),(0,i.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'TradeAudit = trade.toAuditEntity(\n    "trade modify"\n    DateTime.now(),\n    "trade was modified in event",\n    user\n);\n')))),(0,i.kt)("h2",{id:"some-of-the-most-useful-methods"},"Some of the most useful methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Signature"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"byPrimaryKey"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fun byPrimaryKey(): UniqueEntityIndex<*, *>")),(0,i.kt)("td",{parentName:"tr",align:null},"gets entity by primaryKey")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"by{indexField}"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fun by{indexField}(): By{indexField}")),(0,i.kt)("td",{parentName:"tr",align:null},"gets entity by index fields")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"toString"),(0,i.kt)("td",{parentName:"tr",align:null},"fun toString(): String"),(0,i.kt)("td",{parentName:"tr",align:null},"gets the string representation of the view with sensitive fields masked (for example, passwords)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"toStringWithSensitivesUnmasked"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fun toStringWithSensitivesUnmasked(): String")),(0,i.kt)("td",{parentName:"tr",align:null},"gets the string representation of view with sensitive fields(Ex: Password) unmasked")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"set"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"operator fun <T> set(field: TableField<*, T>, value: T?)")),(0,i.kt)("td",{parentName:"tr",align:null},"to set table field with provided value")))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Given the following table definition, declared as described ",(0,i.kt)("a",{parentName:"p",href:"/database/fields-tables-views/tables/"},"here"),", the platform will generate table entities as shown in the examples."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'table(name="CUSTOMER", id = 11002) {\n  CUSTOMER_NAME\n  CUSTOMER_ADDRESS\n  COUNTRY\n  CUSTOMER_PASSWORD sensitive "XXXXXX"\n  primaryKey {\n    CUSTOMER_NAME\n  }\n}\n')),(0,i.kt)("p",null,"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'val customer = Customer {\n  customerName = "Customer_1"\n  customerPassword = "PASSWORD"\n  customerAddress = "London"\n  country = "UK"\n}\n\ncustomer.toGenesisSet(listOf("CUSTOMER_NAME"))\n// Output: CUSTOMER_NAME = Customer_1\n\ncustomer.toGenesisSetFormatted(listOf(ColumnConfig.Field.Aliased("COUNTRY", "CUSTOMER_COUNTRY")))\n// Output: CUSTOMER_COUNTRY = UK\n\ncustomer.toString()\n// Output: Customer{serialVersionUID=\'1\', customerName=Customer_1, customerAddress=London, country=UK, customerPassword=XXXXXX, recordId={not-set}, timestamp={not-set}}\n\ncustomer.toStringWithSensitivesUnmasked()\n// Output: Customer{serialVersionUID=\'1\', customerName=Customer_1, customerAddress=London, country=UK, customerPassword=PASSWORD, recordId={not-set}, timestamp={not-set}}\n\ncustomer.get(CUSTOMER.CUSTOMER_ADDRESS)\n// Output: London\n\ncustomer.set(CUSTOMER.CUSTOMER_ADDRESS, "Manchester")\n')))}v.isMDXComponent=!0}}]);