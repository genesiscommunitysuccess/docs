"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[35670],{13290:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return d}});var a=n(87462),i=n(63366),s=(n(67294),n(3905)),o=(n(61839),["components"]),r={title:"Server Configuration - System Definitions",sidebar_label:"System Definitions",id:"system-definitions",keywords:["server","configuration","system definitions"],tags:["server","configuration","system definitions"]},l=void 0,p={unversionedId:"server/configuring-runtime/system-definitions",id:"server/configuring-runtime/system-definitions",title:"Server Configuration - System Definitions",description:"The system-definition file genesis-system-definition.kts is the basis of all configurations, scripts, data model, etc. This section explains all the different items that are contained in the file.",source:"@site/docs/03_server/01_configuring-runtime/02_system-definitions.md",sourceDirName:"03_server/01_configuring-runtime",slug:"/server/configuring-runtime/system-definitions",permalink:"/next/server/configuring-runtime/system-definitions",draft:!1,tags:[{label:"server",permalink:"/next/tags/server"},{label:"configuration",permalink:"/next/tags/configuration"},{label:"system definitions",permalink:"/next/tags/system-definitions"}],version:"current",sidebarPosition:2,frontMatter:{title:"Server Configuration - System Definitions",sidebar_label:"System Definitions",id:"system-definitions",keywords:["server","configuration","system definitions"],tags:["server","configuration","system definitions"]},sidebar:"serverModulesSidebar",previous:{title:"Introduction",permalink:"/next/server/configuring-runtime/introduction"},next:{title:"Processes",permalink:"/next/server/configuring-runtime/processes"}},m={},d=[{value:"Global, System and Host levels",id:"global-system-and-host-levels",level:2},{value:"Items defined",id:"items-defined",level:2},{value:"Setting System Definitions values from environment variables",id:"setting-system-definitions-values-from-environment-variables",level:2},{value:"HashiCorp Vault support",id:"hashicorp-vault-support",level:2},{value:"Config",id:"config",level:3},{value:"sslConfig",id:"sslconfig",level:3},{value:"readSecrets",id:"readsecrets",level:3},{value:"Linked properties support",id:"linked-properties-support",level:3}],u={toc:d};function c(e){var t=e.components,n=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The system-definition file ",(0,s.kt)("strong",{parentName:"p"},"genesis-system-definition.kts")," is the basis of all configurations, scripts, data model, etc. This section explains all the different items that are contained in the file."),(0,s.kt)("p",null,"Here is an example of a ",(0,s.kt)("strong",{parentName:"p"},"genesis-system-definition.kts")," file for an application:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'package genesis.cfg\n\nsystemDefinition {\n    global {\n        item(name = "MqLayer", value = "ZeroMQ")\n        item(name = "DbLayer", value = "FDB")\n        item(name = "DictionarySource", value = "DB")\n        item(name = "AliasSource", value = "DB")\n        item(name = "MetricsEnabled", value = "false")\n\n        item(name = "ZeroMQProxyInboundPort", value = "5001")\n        item(name = "ZeroMQProxyOutboundPort", value = "5000")\n\n        item(name = "DbHost", value = "localhost")\n        item(name = "DbMode", value = "VANILLA")\n        item(name = "GenesisNetProtocol", value = "V2")\n        item(name = "ResourcePollerTimeout", value = "5")\n        item(name = "ReqRepTimeout", value = "60")\n        item(name = "MetadataChronicleMapAverageKeySizeBytes", value = "128")\n        item(name = "MetadataChronicleMapAverageValueSizeBytes", value = "1024")\n        item(name = "MetadataChronicleMapEntriesCount", value = "512")\n        item(name = "DaemonServerPort", value = "4568")\n        item(\n            name = "JVM_OPTIONS",\n            value = "-XX:MaxHeapFreeRatio=70 -XX:MinHeapFreeRatio=30 -XX:+UseG1GC -XX:+UseStringDeduplication -XX:OnOutOfMemoryError=\\"handleOutOfMemoryError.sh %p\\""\n        )\n    }\n\n    systems {\n        system(name = "DEV") {\n            hosts {\n                host(name = "genesis-serv")\n            }\n\n            item(name = "DbNamespace", value = "genesis")\n            item(name = "ClusterPort", value = "6000")\n            item(name = "Location", value = "LO")\n            item(name = "LogFramework", value = "LOG4J2")\n            item(name = "LogFrameworkConfig", value = "log4j2-default.xml")\n        }\n    }\n}\n')),(0,s.kt)("h2",{id:"global-system-and-host-levels"},"Global, System and Host levels"),(0,s.kt)("p",null,"As you can see from the example, you can define items at global, system and host level."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Global"),": These properties will be available to all systems. "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"System"),": These properties contain information about a particular system and can have a free text field. Each system is associated with a host or hosts. The content should specify the type of environment the system is running in.\nLocal values can be specified in this block. ",(0,s.kt)("strong",{parentName:"li"},"These values override the global values"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Host"),": In this section you can define properties of host or hosts (if running in a cluster environment). Host block can exist under the system section as shown in the above example.\nThe host name defines what environment you are running in. By default, only one host will be used and change its value to current machine hostname.")),(0,s.kt)("h2",{id:"items-defined"},"Items defined"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"MqLayer"),": This setting defines the type of Message queue technology. You can choose between ",(0,s.kt)("inlineCode",{parentName:"p"},"ZeroMQ")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"Aeron")," message queues."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"DbLayer"),": Default value is set to FDB. If you want to use PostgreSQL, MSSQL or Aerospike, then you need to change this value and then ",(0,s.kt)("a",{parentName:"p",href:"/server/configuring-runtime/setting-the-database-technology/"},"change the value of the DbHost item"),".\n",(0,s.kt)("strong",{parentName:"p"},"DbHost"),": Contains information about the hostname/JDBC connection string pointing to local database. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},"item(name = \u201cDbHost\u201d, value = \u201cjdbc:postgresql://localhost:5432/postgres?user=postgres&password=Password5432\u201d)\n")),(0,s.kt)("p",null,"See our pages on ",(0,s.kt)("a",{parentName:"p",href:"/database/database-technology/overview/"},"database technology")," for more information on how to configure a specific database."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Database username and password encryption"),"\nYou can add an encrypted username and password for the database system.\nRun the command ",(0,s.kt)("inlineCode",{parentName:"p"},"encryptUserPassWithKey"),", which will ask you to supply the plain username, password and Genesis Key. Genesis Key is 32 characters long.\nThis will generate encrypted username and password, which can then be added into a system definition file. You can directly add the encrypted values or you can embed these fields into the local system environment variables and refer to them as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'item(name = "DbUsername", value = System.getenv("DBUSERNAME"), encrypted = true)\nitem(name = "DbPassword", value = System.getenv("DBPASSWORD"), encrypted = true)\nitem(name = "GenesisKey", value = System.getenv("GENESIS_KEY"))\n')),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"DictionarySource"),": This setting defines where you want to store the dictionary schema. You can choose between DB dictionary source and FILE dictionary source using this setting. Accepted values ",(0,s.kt)("inlineCode",{parentName:"p"},"DB")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"FILE"),". DB dictionary source is preferred, because if you are running a cluster, all nodes will refer to the same dictionary. FILE dictionary source has the problem of being only available on each node."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"AliasSource"),": This setting defines where you want to store dictionary alias schema. The alias schema maps aliases to fields and to tables, and it is updated every time we change the data schema. You can choose between DB alias source and FILE alias source using this setting. Accepted values ",(0,s.kt)("inlineCode",{parentName:"p"},"DB")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"FILE"),". DB alias source is preferred, because if you are running a cluster all nodes will refer to the same alias dictionary. FILE alias source has the problem of being only available on each node."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"MetricsEnabled"),": Default value is false. For more information, go to the page on ",(0,s.kt)("a",{parentName:"p",href:"/operations/metrics/metrics/"},"Metrics"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ZeroMQProxyInboundPort")," and ",(0,s.kt)("strong",{parentName:"p"},"ZeroMQProxyOutboundPort")," are required for the processes that use GENESIS_CLUSTER as a proxy for the update queue (eg.: DbMon, PurgeTables, etc...)."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"DbMode"),": This setting is utilised by Aerospike and PostgreSQL database only, for other databases this property will be ignored"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"For ",(0,s.kt)("a",{parentName:"p",href:"/database/database-technology/aerospike/"},"Aerospike")," database: This can be one of two values: VANILLA for an Aerospike Community installation and DURABLE_DELETE if you are using Aerospike Enterprise")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"For ",(0,s.kt)("a",{parentName:"p",href:"/database/database-technology/sql/#postgresql"},"PostgresSQL"),": This can be one of two values: POSTGRESQL if you want PostgreSQL to work with namespaces/schemas and LEGACY which is default mode it always stores the dictionary in table called ",(0,s.kt)("inlineCode",{parentName:"p"},"dictionary")," and schema called ",(0,s.kt)("inlineCode",{parentName:"p"},"metadata"),"."))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ResourcePollerTimeout"),": This setting controls how often the genesis daemon process keeps the processes and their metadata up to date."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ReqRepTimeout"),": This setting contains the default timeout for the request server resources in the system."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"MetadataChronicleMapAverageKeySizeBytes"),", ",(0,s.kt)("strong",{parentName:"p"},"MetadataChronicleMapAverageValueSizeBytes"),", ",(0,s.kt)("strong",{parentName:"p"},"MetadataChronicleMapEntriesCount"),": These are the settings for chronicle map and are related to the way processes store their own metadata resources inside /runtime/proc_metadata"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"DaemonServerPort"),": This defines the port for daemon process, daemon process is the background process, which collects information about micro-services."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"JVM_OPTIONS"),": This defines common JVM options to be applied to all processes defined in the environment."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"DbNamespace"),": This item defines different things, depending on the databases in use as specified below"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For ",(0,s.kt)("a",{parentName:"li",href:"/database/database-technology/foundationdb/"},"FoundatioDB"),": It will be used when creating internal DirectoryLayers"),(0,s.kt)("li",{parentName:"ul"},"For ",(0,s.kt)("a",{parentName:"li",href:"/database/database-technology/aerospike/"},"Aerospike"),", ",(0,s.kt)("a",{parentName:"li",href:"/database/database-technology/sql/#postgresql"},"Postgres"),", ",(0,s.kt)("a",{parentName:"li",href:"/database/database-technology/sql/#ms-sql"},"MSSQL")," and ",(0,s.kt)("a",{parentName:"li",href:"/database/database-technology/sql/#oracle"},"ORACLE"),": It refers to namespace/schema of database. This feature allows you to segregate data from different\ngenesis apps while using single database")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"ClusterPort"),": This setting specifies the port used by GENESIS_CLUSTER to establish cluster membership between cluster nodes."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Location"),": This item contains a 2-character value used to generate ",(0,s.kt)("strong",{parentName:"p"},"standard ID"),' for a given entity. For example, if a Location item defined as "LO" and entity TRADE has a field called TRADE_ID defined with the sequence "TR",\nthen the generated ID will be ',(0,s.kt)("inlineCode",{parentName:"p"},"000000000001TRLO1"),' where "LO" represents Location string.'),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"LogFramework"),": Contains name of the logging framework. Supported framework: LOG4J2"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"LogFrameworkConfig"),": Contains name of the log framework configuration file."),(0,s.kt)("p",null,"If you want to enable SSL for your process communication, this is done in the ",(0,s.kt)("a",{parentName:"p",href:"/server/configuring-runtime/service-definitions/#enable-ssl-for-processes"},"service definition"),"."),(0,s.kt)("h2",{id:"setting-system-definitions-values-from-environment-variables"},"Setting System Definitions values from environment variables"),(0,s.kt)("p",null,"It's possible to load system definition values from the environments, this may be preferred if you wish to dynamically set values for a given environment."),(0,s.kt)("p",null,"To do this, the ",(0,s.kt)("inlineCode",{parentName:"p"},"value")," attribute of an ",(0,s.kt)("inlineCode",{parentName:"p"},"item")," can be set to read an environment variable and fall back to a sensible default. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'item(name = "DbHost", value = System.getenv("DBHOST") ?: "localhost")\n')),(0,s.kt)("p",null,"In this example we are fetching the value of ",(0,s.kt)("inlineCode",{parentName:"p"},"DbHost")," from the environment variable ",(0,s.kt)("inlineCode",{parentName:"p"},"DBHOST"),", if the environment variable is not set then the default value of ",(0,s.kt)("inlineCode",{parentName:"p"},'"localhost"')," will be used."),(0,s.kt)("h2",{id:"hashicorp-vault-support"},"HashiCorp Vault support"),(0,s.kt)("admonition",{type:"important"},(0,s.kt)("p",{parentName:"admonition"},"This feature is supported from version 6.0")),(0,s.kt)("p",null,"Services can also load their configuration from HashiCorp vault.\nThis can be done by adding a ",(0,s.kt)("inlineCode",{parentName:"p"},"vault")," tag in the ",(0,s.kt)("inlineCode",{parentName:"p"},"global"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"system")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"host"),"\ntags. "),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"vault")," tag has three sub tags, ",(0,s.kt)("inlineCode",{parentName:"p"},"config"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"sslConfig")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"readSecrets"),". Of\nthese three, ",(0,s.kt)("inlineCode",{parentName:"p"},"config")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"readSecrets")," are required:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},"vault {\n  config {  \n    ...\n  }\n\n  sslConfig { \n    ...\n  }\n\n  readSecrets { \n    ...\n  }\n}\n")),(0,s.kt)("h3",{id:"config"},"Config"),(0,s.kt)("p",null,"This part of the configuration tells the service where to read secrets from: "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'config {\n    address("http://localhost:8200")     // Defaults to "VAULT_ADDR" environment variable\n    token("s.NSxyuF4ClXxd4YoSFvKwil0i")  // Defaults to "VAULT_TOKEN" environment variable\n    openTimeout(5)                       // Defaults to "VAULT_OPEN_TIMEOUT" environment variable\n    readTimeout(30)                      // Defaults to "VAULT_READ_TIMEOUT" environment variable \n}\n')),(0,s.kt)("h3",{id:"sslconfig"},"sslConfig"),(0,s.kt)("p",null,"This part of the configuration tells the service how to handle the ssl hand\nshake with the vault server. For details regarding the ssl config, please see\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/BetterCloud/vault-java-driver#ssl-config"},"here"),".\nNote that the ",(0,s.kt)("inlineCode",{parentName:"p"},"SslConfig")," object will be passed as the receiver within\nthe ",(0,s.kt)("inlineCode",{parentName:"p"},"sslConfig")," tag."),(0,s.kt)("h3",{id:"readsecrets"},"readSecrets"),(0,s.kt)("p",null,"This part of the configuration tells the service which secrets to load:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'readSecrets {\n  read("secret/path_to_secret")\n}\n')),(0,s.kt)("p",null,"Currently, a single call to ",(0,s.kt)("inlineCode",{parentName:"p"},"read")," is supported. This takes a single parameter,\nwhich is the path to the secrets."),(0,s.kt)("p",null,"Secrets are always provided as ",(0,s.kt)("inlineCode",{parentName:"p"},"String")),(0,s.kt)("h3",{id:"linked-properties-support"},"Linked properties support"),(0,s.kt)("admonition",{type:"important"},(0,s.kt)("p",{parentName:"admonition"},"This feature is supported from version 6.0")),(0,s.kt)("p",null,"When reading secrets from external systems, the keys to these secrets might\nnot map directly to the required properties in Genesis. To help with this, the platform supports the linking of properties. "),(0,s.kt)("p",null,"The links can be applied as tags at ",(0,s.kt)("inlineCode",{parentName:"p"},"global"),",\n",(0,s.kt)("inlineCode",{parentName:"p"},"system")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"host")," level. "),(0,s.kt)("p",null,"To create a link, use ",(0,s.kt)("inlineCode",{parentName:"p"},"link"),", as per below, where we link ",(0,s.kt)("inlineCode",{parentName:"p"},"DbHost")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"secret.db.host"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'systemDefinition {\n  global {\n    link(name = "DbHost", source = "secret.db.host")\n  }\n  ...\n}\n')),(0,s.kt)("p",null,"Multiple levels of linking are supported. However, ",(0,s.kt)("inlineCode",{parentName:"p"},"genesisInstall")," will fail if a circular link is detected, or if the ",(0,s.kt)("inlineCode",{parentName:"p"},"source")," of a link is not found."))}c.isMDXComponent=!0}}]);