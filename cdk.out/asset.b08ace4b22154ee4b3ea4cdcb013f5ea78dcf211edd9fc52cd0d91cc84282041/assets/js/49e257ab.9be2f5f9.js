"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[32912],{3061:function(e){e.exports=JSON.parse('{"label":"testing","permalink":"/next/tags/testing","allTagsPath":"/next/tags","count":16,"items":[{"id":"server/integration/apache-camel/testing","title":"Apache Camel - Testing","description":"Introduction  | Basics | Advanced | Examples | Configuring runtime | Testing","permalink":"/next/server/integration/apache-camel/testing"},{"id":"operations/testing/component-testing","title":"Component testing","description":"There are two easy ways of testing components in your application:","permalink":"/next/operations/testing/component-testing"},{"id":"server/consolidator/testing","title":"Consolidator - Testing","description":"Introduction | Basics |  Advanced | Examples | Configuring runtime | Testing","permalink":"/next/server/consolidator/testing"},{"id":"server/integration/custom-endpoints/testing","title":"Custom Endpoints - Testing","description":"Introduction | Basics |  Advanced | Examples | Configuring runtime | Testing","permalink":"/next/server/integration/custom-endpoints/testing"},{"id":"server/integration/data-pipeline/testing","title":"Data Pipeline - Testing","description":"Introduction  | Basics | Advanced | Examples | Configuring runtime | Testing","permalink":"/next/server/integration/data-pipeline/testing"},{"id":"server/data-server/testing","title":"Data Server - Testing","description":"Integration testing","permalink":"/next/server/data-server/testing"},{"id":"server/integration/database-streaming-out/testing","title":"DB Streaming Out - Testing","description":"Introduction  | Basics | Advanced | Examples | Configuring runtime | Testing","permalink":"/next/server/integration/database-streaming-out/testing"},{"id":"server/evaluator/testing","title":"Evaluator - Testing","description":"Introduction | Basics | Examples | Configuring runtime | Testing","permalink":"/next/server/evaluator/testing"},{"id":"server/event-handler/testing","title":"Event Handler - Testing","description":"Integration testing","permalink":"/next/server/event-handler/testing"},{"id":"web/testing/foundation-testing","title":"Foundation testing","description":"foundation-testing provides shared unit and e2e testing functionality.","permalink":"/next/web/testing/foundation-testing"},{"id":"operations/testing/integration-testing","title":"Integration testing","description":"Database and service tests","permalink":"/next/operations/testing/integration-testing"},{"id":"server/request-server/testing","title":"Request Server - Testing","description":"Integration testing","permalink":"/next/server/request-server/testing"},{"id":"server/integration/rest-endpoints/testing","title":"REST endpoints - Testing","description":"Introduction | Where to define | Basics | Advanced | Configuring runtime | Testing","permalink":"/next/server/integration/rest-endpoints/testing"},{"id":"server/state-machine/testing","title":"State Machine - Testing","description":"Integration testing","permalink":"/next/server/state-machine/testing"},{"id":"server/event-handler/testing-java-event-handlers","title":"Testing Java Event Handlers","description":"Integration testing","permalink":"/next/server/event-handler/testing-java-event-handlers"},{"id":"operations/testing/unit-testing","title":"Unit testing","description":"Unit testing does not require a database or the running of a Genesis service, so, as you define your application, each component should be unit tested according to standard best practice.","permalink":"/next/operations/testing/unit-testing"}]}')}}]);