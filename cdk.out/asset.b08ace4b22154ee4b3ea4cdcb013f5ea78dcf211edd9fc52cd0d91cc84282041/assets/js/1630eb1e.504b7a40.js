"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[11889],{85332:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return n},metadata:function(){return d},toc:function(){return u}});var r=a(87462),i=a(63366),l=(a(67294),a(3905)),s=(a(61839),["components"]),n={title:"Helper classes - WriteResult",sidebar_label:"WriteResult",id:"write-result",keywords:["database","helper classes","writeresult"],tags:["database","helper classes","writeresult"]},o=void 0,d={unversionedId:"database/helper-classes/write-result",id:"database/helper-classes/write-result",title:"Helper classes - WriteResult",description:"Entity write result",source:"@site/docs/02_database/06_helper-classes/03_write-results.md",sourceDirName:"02_database/06_helper-classes",slug:"/database/helper-classes/write-result",permalink:"/next/database/helper-classes/write-result",draft:!1,tags:[{label:"database",permalink:"/next/tags/database"},{label:"helper classes",permalink:"/next/tags/helper-classes"},{label:"writeresult",permalink:"/next/tags/writeresult"}],version:"current",sidebarPosition:3,frontMatter:{title:"Helper classes - WriteResult",sidebar_label:"WriteResult",id:"write-result",keywords:["database","helper classes","writeresult"],tags:["database","helper classes","writeresult"]},sidebar:"databaseSidebar",previous:{title:"Bulk",permalink:"/next/database/helper-classes/subscription/bulk"},next:{title:"ModifyDetails",permalink:"/next/database/helper-classes/modify-details"}},p={},u=[{value:"Entity write result",id:"entity-write-result",level:2},{value:"InsertResult",id:"insertresult",level:3},{value:"DeleteResult",id:"deleteresult",level:3},{value:"ModifyResult",id:"modifyresult",level:3},{value:"UpsertResult",id:"upsertresult",level:3},{value:"Write result",id:"write-result",level:2}],h={toc:u};function c(e){var t=e.components,a=(0,i.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"entity-write-result"},"Entity write result"),(0,l.kt)("p",null,"The entity database will return type-safe results for write operations. There are four main write results, one for each type of write operation. Each of these operations is of type ",(0,l.kt)("inlineCode",{parentName:"p"},"EntityWriteResult"),"."),(0,l.kt)("p",null,"In all cases, the records in the result will be a generated entity that matches the input. So, for inserting a\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"Trade"),"\xa0instance, the database will return a result of type\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"InsertResult<Trade>"),"\xa0where the property\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"record"),"\xa0will be of type\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"Trade"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"InsertResult")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DeleteResult")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ModifyResult")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"UpsertResult"),"; either an\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"InsertResult"),"\xa0or a\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"ModifyResult"))),(0,l.kt)("h3",{id:"insertresult"},"InsertResult"),(0,l.kt)("p",null,"The\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"InsertResult"),"\xa0has a single property\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"record"),"\xa0which is the inserted record. This includes any generated values."),(0,l.kt)("h3",{id:"deleteresult"},"DeleteResult"),(0,l.kt)("p",null,"The\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"DeleteResult"),"\xa0has a single property\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"record"),"\xa0which is the record as it was in the database before it was deleted."),(0,l.kt)("h3",{id:"modifyresult"},"ModifyResult"),(0,l.kt)("p",null,"The\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"ModifyResult"),"\xa0is slightly more complex. It has three properties:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"record"),"\xa0property, which is the record in the database after the modify operation"),(0,l.kt)("li",{parentName:"ul"},"a\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"previous"),"\xa0property, which is the record as it was\xa0",(0,l.kt)("em",{parentName:"li"},"before"),"\xa0the modify operation"),(0,l.kt)("li",{parentName:"ul"},"a\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"modifiedFields"),"\xa0property, which holds a\xa0",(0,l.kt)("inlineCode",{parentName:"li"},"Set<String>"),"\xa0of the fields that were changed in the modify")),(0,l.kt)("h3",{id:"upsertresult"},"UpsertResult"),(0,l.kt)("p",null,"This could be either an ",(0,l.kt)("inlineCode",{parentName:"p"},"InsertResult")," or a ",(0,l.kt)("inlineCode",{parentName:"p"},"ModifyResult"),"."),(0,l.kt)("h2",{id:"write-result"},"Write result"),(0,l.kt)("p",null,"This is a single catch-all type for results of a write operation when using generated repositories or RxDb."),(0,l.kt)("p",null,"This type has the following fields:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"savedRecords")," - the saved records"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"removedRecords")," - the deleted records"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"modifiedFields")," - the updated fields"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"numRecordsDeleted")," - the number of records deleted"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isError")," - there was an error during the database operation. Needs to be checked when ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidationMode.LEGACY")," is used"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"errorText")," - the error description. Needs to be checked when ",(0,l.kt)("inlineCode",{parentName:"li"},"ValidationMode.LEGACY")," is used")),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Using\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"RxDb"),"\xa0instead of\xa0",(0,l.kt)("a",{parentName:"p",href:"/database/database-interface/entity-db/"},"entityDb"),"\xa0or\xa0",(0,l.kt)("a",{parentName:"p",href:"/database/database-interface/generated-repositories/"},"generated repositories"),"\xa0will circumvent compile-time validation of database interactions. This means that errors might not appear until runtime or might lead to unexpected results.")))}c.isMDXComponent=!0}}]);