"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[54299],{18551:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return u}});var a=n(87462),i=n(63366),s=(n(67294),n(3905)),l=(n(61839),["components"]),r={title:"Prerequisites - Genx",sidebar_label:"Genx",id:"genx",keywords:["getting started","quick start","prerequisites","genx"],tags:["getting started","quick start","prerequisites","genx"]},o=void 0,p={unversionedId:"getting-started/prerequisites/genx",id:"version-2022.3/getting-started/prerequisites/genx",title:"Prerequisites - Genx",description:"The GenesisX CLI GenX is a command-line interface tool that you can use to scaffold Genesis applications and workspaces directly from a terminal.",source:"@site/versioned_docs/version-2022.3/01_getting-started/04_prerequisites/04_genx.md",sourceDirName:"01_getting-started/04_prerequisites",slug:"/getting-started/prerequisites/genx",permalink:"/getting-started/prerequisites/genx",draft:!1,tags:[{label:"getting started",permalink:"/tags/getting-started"},{label:"quick start",permalink:"/tags/quick-start"},{label:"prerequisites",permalink:"/tags/prerequisites"},{label:"genx",permalink:"/tags/genx"}],version:"2022.3",sidebarPosition:4,frontMatter:{title:"Prerequisites - Genx",sidebar_label:"Genx",id:"genx",keywords:["getting started","quick start","prerequisites","genx"],tags:["getting started","quick start","prerequisites","genx"]},sidebar:"learningSidebar",previous:{title:"Gradle deploy plugin",permalink:"/getting-started/prerequisites/gradle-deploy-plugin"},next:{title:"Manual installation",permalink:"/getting-started/prerequisites/manual-installation"}},d={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing GenX",id:"installing-genx",level:2},{value:"Using GenX",id:"using-genx",level:2},{value:"Front-end prompts",id:"front-end-prompts",level:3},{value:"Back-end prompts",id:"back-end-prompts",level:3},{value:"Workspaces",id:"workspaces",level:2},{value:"Workspaces and application filesystem",id:"workspaces-and-application-filesystem",level:3},{value:"CLI command-language syntax",id:"cli-command-language-syntax",level:2},{value:"Boolean options",id:"boolean-options",level:2}],c={toc:u};function m(e){var t=e.components,r=(0,i.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The GenesisX CLI GenX is a command-line interface tool that you can use to scaffold Genesis applications and workspaces directly from a terminal. "),(0,s.kt)("p",null,"With GenX, you can pull seed projects that adhere to best practices for development on the Genesis low-code platform. The seed projects available range from skeleton projects to example applications."),(0,s.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Recommended Operating system : Windows 10 Pro"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version 16"),(0,s.kt)("li",{parentName:"ul"},"Before installing GenX, you need to ",(0,s.kt)("a",{parentName:"li",href:"/getting-started/quick-start/hardware-and-software/#npmrc-set-up"},"configure the Genesis npm repository"))),(0,s.kt)("h2",{id:"installing-genx"},"Installing GenX"),(0,s.kt)("p",null,"Once the repository is configured, open a terminal on your Windows machine and install the CLI tool using this:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"npm install -g @genesislcap/foundation-cli\n")),(0,s.kt)("p",null,"Now you're ready to use the tool, simply type ",(0,s.kt)("inlineCode",{parentName:"p"},"genx")," to start:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"genx\n")),(0,s.kt)("p",null,"This command presents you with a sequence of choices for creating and configuring applications."),(0,s.kt)("h2",{id:"using-genx"},"Using GenX"),(0,s.kt)("p",null,"First, you'll be prompted to supply your Genesis artifactory credentials ",(0,s.kt)("a",{parentName:"p",href:"/getting-started/quick-start/hardware-and-software/#npmrc-set-up"},"used when setting up your .npmrc")),(0,s.kt)("p",null,"Next, follow the instructions according to the task you're wishing to carry out."),(0,s.kt)("p",null,"The following is the most typical example, creating a new application:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Please select an option: create application - Generates a local application.\n")),(0,s.kt)("p",null,"Enter the local directory you want to create the app in (where relevant, the default for these options is the letter displayed in upper case; this will be applied if nothing is entered):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Create a app in current directory (Y/n)\n")),(0,s.kt)("p",null,"... and then give it an appropriate name (e.g. ",(0,s.kt)("strong",{parentName:"p"},"alpha"),"):"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? App name alpha\n")),(0,s.kt)("p",null,"Next, select Seed application you wish to base your project on:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? App seed\n\n> Genesis Quick Start Application\n")),(0,s.kt)("p",null,"Choose whether to overwrite existing files. The default is ",(0,s.kt)("strong",{parentName:"p"},"No"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Overwrite existing files (y/N)\n")),(0,s.kt)("p",null,"This will start the download of dependencies."),(0,s.kt)("h3",{id:"front-end-prompts"},"Front-end prompts"),(0,s.kt)("p",null,"Once that is done, you will be prompted for configuring the front-end part of the project."),(0,s.kt)("p",null,"The first prompt is the package ",(0,s.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/cli/v8/using-npm/scope"},"scope"),". The default is ",(0,s.kt)("strong",{parentName:"p"},"genesislcap"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Package scope (without the @) genesislcap\n")),(0,s.kt)("p",null,"The next question is about the package name. You can use ",(0,s.kt)("strong",{parentName:"p"},"alpha"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Package name alpha\n")),(0,s.kt)("p",null,"The next is whether you want to create a design system. The default is ",(0,s.kt)("strong",{parentName:"p"},"Yes"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Create design system (Yes/no)\n")),(0,s.kt)("p",null,"Finally, whether you want to set an API host. The default is ",(0,s.kt)("strong",{parentName:"p"},"Yes"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Set API Host (Yes/no)\n")),(0,s.kt)("h3",{id:"back-end-prompts"},"Back-end prompts"),(0,s.kt)("p",null,"The next prompts concern the back-end part of the application."),(0,s.kt)("p",null,"The first prompt is for which Genesis Server version is to be used:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Genesis Server version 6.1.2\n")),(0,s.kt)("p",null,"... followed by the Gradle deploy plugin version."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"At the time of writing, the same version as the Genesis Server must be used.")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Genesis Deploy plugin version 6.1.2\n")),(0,s.kt)("p",null,"Then specify the Kotlin version. The latest tested version is 1.6.10:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Kotlin version 1.6.10\n")),(0,s.kt)("p",null,"... followed by the ",(0,s.kt)("a",{parentName:"p",href:"https://maven.apache.org/guides/mini/guide-naming-conventions.html"},"group id")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Group Id global.genesis\n")),(0,s.kt)("p",null,"... and the application version:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Windows Terminal"',title:'"Windows','Terminal"':!0},"? Application Version 1.0.0-SNAPSHOT\n")),(0,s.kt)("p",null,"Press ",(0,s.kt)("strong",{parentName:"p"},"Enter")," and you should be greeted by a message saying that the application was created successfully."),(0,s.kt)("p",null,"Open the project in IntelliJ to start building. But note - it takes a few minutes to set up the folder structure, so be patient."),(0,s.kt)("p",null,"Here's a quick overview of the generated application's folder structure:"),(0,s.kt)("p",null,(0,s.kt)("img",{src:n(16725).Z,width:"167",height:"642"})),(0,s.kt)("p",null,"Above, we have expanded the ",(0,s.kt)("inlineCode",{parentName:"p"},"client")," folder. This contains all the UI-related projects."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"server")," folder follows the same structure. This contains all the server-side projects."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"The ",(0,s.kt)("strong",{parentName:"p"},"Quick Start Application")," seed will generate:"),(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"web")," project structure"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"jvm")," project structure"))),(0,s.kt)("h2",{id:"workspaces"},"Workspaces"),(0,s.kt)("p",null,"Workspaces are top-level client monorepos that contains various packages, such as components, micro front-ends, design systems, and at least one application. All these packages can be versioned and released independently. This set-up provides an enhanced developer experience."),(0,s.kt)("p",null,"The workspace generator automates the following steps for you:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"creates a local workspace from a local or remote seed and configures it."),(0,s.kt)("li",{parentName:"ul"},"persists the information captured during your CLI session within the workspace filesystem for future use.")),(0,s.kt)("h3",{id:"workspaces-and-application-filesystem"},"Workspaces and application filesystem"),(0,s.kt)("p",null,"Your apps are local to workspaces; they don't exist in isolation."),(0,s.kt)("p",null,"After you have created a workspace, your workspace filesystem should look something like this (depending on the seed)."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./packages/\n\u251c\u2500\u2500 apps\n\u2502   \u251c\u2500\u2500 demo\n\u251c\u2500\u2500 components\n\u251c\u2500\u2500 design-systems\n\u2502   \u2514\u2500\u2500 alpha\n\u251c\u2500\u2500 micro-frontends\n\u251c\u2500\u2500 services\n\u2514\u2500\u2500 utils\n")),(0,s.kt)("p",null,"This is a monorepo containing multiple packages. Each package can be released independently."),(0,s.kt)("h2",{id:"cli-command-language-syntax"},"CLI command-language syntax"),(0,s.kt)("p",null,"The command syntax is:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"genx")," ",(0,s.kt)("em",{parentName:"p"},"commandNameOrAlias requiredArg ","[optionalArg]")," ","[options]"),(0,s.kt)("h2",{id:"boolean-options"},"Boolean options"),(0,s.kt)("p",null,"Boolean options have two forms:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"--this-option")," sets the flag to ",(0,s.kt)("inlineCode",{parentName:"p"},"true"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"p"},"--no-this-option")," sets it to ",(0,s.kt)("inlineCode",{parentName:"p"},"false")))),(0,s.kt)("p",null,"If neither option is supplied, the flag remains in its default state."))}m.isMDXComponent=!0},16725:function(e,t,n){t.Z=n.p+"assets/images/create-application-folder-overview-eb9f0648db451cc3e7006b51ef9f4c98.png"}}]);