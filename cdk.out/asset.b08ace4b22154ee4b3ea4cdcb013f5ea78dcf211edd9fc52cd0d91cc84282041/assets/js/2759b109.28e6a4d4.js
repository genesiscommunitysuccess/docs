"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[37357],{76544:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return p},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return g}});var a=n(87462),o=n(63366),s=(n(67294),n(3905)),r=(n(61839),["components"]),i={title:"Server Configuration - Database technology",sidebar_label:"Setting the database technology",id:"setting-the-database-technology",keywords:["server","configuration","database technology"],tags:["server","configuration","database technology"]},l=void 0,u={unversionedId:"server/configuring-runtime/setting-the-database-technology",id:"server/configuring-runtime/setting-the-database-technology",title:"Server Configuration - Database technology",description:"The Genesis low-code platform supports the following database technology:",source:"@site/docs/03_server/01_configuring-runtime/07_setting-the-database-technology.md",sourceDirName:"03_server/01_configuring-runtime",slug:"/server/configuring-runtime/setting-the-database-technology",permalink:"/next/server/configuring-runtime/setting-the-database-technology",draft:!1,tags:[{label:"server",permalink:"/next/tags/server"},{label:"configuration",permalink:"/next/tags/configuration"},{label:"database technology",permalink:"/next/tags/database-technology"}],version:"current",sidebarPosition:7,frontMatter:{title:"Server Configuration - Database technology",sidebar_label:"Setting the database technology",id:"setting-the-database-technology",keywords:["server","configuration","database technology"],tags:["server","configuration","database technology"]},sidebar:"serverModulesSidebar",previous:{title:"Cache",permalink:"/next/server/configuring-runtime/cache"},next:{title:"Introduction",permalink:"/next/server/data-server/introduction"}},c={},g=[{value:"Changing the database technology",id:"changing-the-database-technology",level:2},{value:"1. Edit the system configuration file",id:"1-edit-the-system-configuration-file",level:3},{value:"2. Activate the new configuration",id:"2-activate-the-new-configuration",level:3},{value:"3. Create new default table structures",id:"3-create-new-default-table-structures",level:3},{value:"4. Start the server and check",id:"4-start-the-server-and-check",level:3}],d={toc:g};function p(e){var t=e.components,i=(0,o.Z)(e,r);return(0,s.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The Genesis low-code platform supports the following database technology:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"FoundationDB"),(0,s.kt)("li",{parentName:"ul"},"Postgres (PostgreSQL)"),(0,s.kt)("li",{parentName:"ul"},"MSSQL"),(0,s.kt)("li",{parentName:"ul"},"Aerospike")),(0,s.kt)("p",null,"Because we abstract from the underlying technology, you can easily toggle between any of these four."),(0,s.kt)("p",null,"There are also tools that enable you to stream real-time data reliably to and from any classic ",(0,s.kt)("a",{parentName:"p",href:"/database/database-technology/sql/"},"Oracle/SQL database"),"."),(0,s.kt)("p",null,"By default, FoundationDB is installed on the platform. If you need to use another supported database, follow the steps below."),(0,s.kt)("h2",{id:"changing-the-database-technology"},"Changing the database technology"),(0,s.kt)("h3",{id:"1-edit-the-system-configuration-file"},"1. Edit the system configuration file"),(0,s.kt)("p",null,"Edit the ",(0,s.kt)("a",{parentName:"p",href:"/server/configuring-runtime/system-definitions/"},"system definition file"),": ",(0,s.kt)("strong",{parentName:"p"},"~","/run/site-specific/cfg/genesis-system-definition.kts"),". Before you start, make sure you know the JDBC connection string for the database, which specifies the host, the username and password."),(0,s.kt)("p",null,"You need to make two changes."),(0,s.kt)("p",null,"First, go to the line item for ",(0,s.kt)("strong",{parentName:"p"},"DbLayer")," and change the ",(0,s.kt)("strong",{parentName:"p"},"value")," from ",(0,s.kt)("strong",{parentName:"p"},"FDB")," to ",(0,s.kt)("strong",{parentName:"p"},"SQL")," (for Postgres and MSSQL) or ",(0,s.kt)("strong",{parentName:"p"},"Aerospike"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'systemDefinition {\n    global {\n        item(name = "MqLayer", value = "ZeroMQ")\n        item(name = "DbLayer", value = "SQL")\n        item(name = "DictionarySource", value = "DB")\n\n')),(0,s.kt)("p",null,"Then, insert a line in the ",(0,s.kt)("strong",{parentName:"p"},"hosts")," block to identify the JDBC connection string for the database. This points the system to the local Postgres, MSSQL or Aerospike server. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'item(name = "DbHost", value = "jdbc:postgresql://localhost:5432/postgres?user=postgres&password=Password5432")\n')),(0,s.kt)("p",null,"Here is the example in place:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'systems {\n        system(name = "DEV") {\n            hosts {\n                host(name = "genesis-serv")\n            }\n\n            item(name = "DbHost", value = "jdbc:postgresql://localhost:5432/postgres?user=postgres&password=Password5432")\n            item(name = "DbNamespace", value = "genesis")\n            item(name = "ClusterPort", value = "6000")\n            item(name = "Location", value = "LO")\n            item(name = "LogFramework", value = "LOG4J2")\n            item(name = "LogFrameworkConfig", value = "log4j2-default.xml")\n        }\n    }\n')),(0,s.kt)("p",null,"For Aerospike, you might also want to update the ",(0,s.kt)("strong",{parentName:"p"},"DbNamespace")," and ",(0,s.kt)("strong",{parentName:"p"},"DbMode")," properties in the ",(0,s.kt)("a",{parentName:"p",href:"/server/configuring-runtime/system-definitions/"},"system definition file"),". "),(0,s.kt)("p",null,"If you are using Postgres and you want to use a reserved keyword as a column name, then you need to add the setting below to your system definition file. This enables Quoted Identifiers to be used:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'item(name = "DbQuotedIdentifiers", value = "true")\n')),(0,s.kt)("h3",{id:"2-activate-the-new-configuration"},"2. Activate the new configuration"),(0,s.kt)("p",null,"Run ",(0,s.kt)("inlineCode",{parentName:"p"},"genesisInstall"),"."),(0,s.kt)("h3",{id:"3-create-new-default-table-structures"},"3. Create new default table structures"),(0,s.kt)("p",null,"Run ",(0,s.kt)("inlineCode",{parentName:"p"},"remap --commit"),". This populates the database server with table structures."),(0,s.kt)("h3",{id:"4-start-the-server-and-check"},"4. Start the server and check"),(0,s.kt)("p",null,"When those three steps have been completed, run ",(0,s.kt)("inlineCode",{parentName:"p"},"startServer")," to start all the processes."),(0,s.kt)("p",null,"On completion, run ",(0,s.kt)("inlineCode",{parentName:"p"},"mon"),", and you can see the processes running. You have successfully completed the change."),(0,s.kt)("p",null,(0,s.kt)("img",{src:n(52144).Z,width:"900",height:"380"})))}p.isMDXComponent=!0},52144:function(e,t,n){t.Z=n.p+"assets/images/mon-processes-running-4a9f6d651a4a80f2aef18c84d42e6884.png"}}]);