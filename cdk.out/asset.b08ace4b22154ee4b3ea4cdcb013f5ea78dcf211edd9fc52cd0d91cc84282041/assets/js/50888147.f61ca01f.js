"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[95928],{44027:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return T},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return N}});var a=n(87462),i=n(63366),l=(n(67294),n(3905)),r=(n(61839),["components"]),s={title:"Postgres data pipeline - Create Genesis Dictionary",sidebar_label:"Create Genesis Dictionary",sidebar_position:2,id:"dictionary",keywords:["getting started","quick start","postgres data pipeline","dictionary"],tags:["getting started","quick start","postgres data pipeline","dictionary"]},p=void 0,o={unversionedId:"getting-started/use-cases/postgres-data-pipeline/dictionary",id:"getting-started/use-cases/postgres-data-pipeline/dictionary",title:"Postgres data pipeline - Create Genesis Dictionary",description:"Create new Genesis project",source:"@site/docs/01_getting-started/05_use-cases/postgres-data-pipeline/01_create-project.md",sourceDirName:"01_getting-started/05_use-cases/postgres-data-pipeline",slug:"/getting-started/use-cases/postgres-data-pipeline/dictionary",permalink:"/next/getting-started/use-cases/postgres-data-pipeline/dictionary",draft:!1,tags:[{label:"getting started",permalink:"/next/tags/getting-started"},{label:"quick start",permalink:"/next/tags/quick-start"},{label:"postgres data pipeline",permalink:"/next/tags/postgres-data-pipeline"},{label:"dictionary",permalink:"/next/tags/dictionary"}],version:"current",sidebarPosition:2,frontMatter:{title:"Postgres data pipeline - Create Genesis Dictionary",sidebar_label:"Create Genesis Dictionary",sidebar_position:2,id:"dictionary",keywords:["getting started","quick start","postgres data pipeline","dictionary"],tags:["getting started","quick start","postgres data pipeline","dictionary"]},sidebar:"learningSidebar",previous:{title:"Introduction",permalink:"/next/getting-started/use-cases/postgres-data-pipeline/"},next:{title:"Prepare the Source Data",permalink:"/next/getting-started/use-cases/postgres-data-pipeline/source-data"}},d={},N=[{value:"Create new Genesis project",id:"create-new-genesis-project",level:2},{value:"The Genesis data model",id:"the-genesis-data-model",level:2}],m={toc:N};function T(e){var t=e.components,s=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"create-new-genesis-project"},"Create new Genesis project"),(0,l.kt)("p",null,"At this point you should have ",(0,l.kt)("inlineCode",{parentName:"p"},"genx")," installed on your machine. If you don't, then follow this ",(0,l.kt)("a",{parentName:"p",href:"/getting-started/prerequisites/genx/"},"guide")," to set it up."),(0,l.kt)("p",null,"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"genx")," to create new blank project following the instructions ",(0,l.kt)("a",{parentName:"p",href:"/getting-started/quick-start/create-a-new-project/"},"here"),". For the rest of the tutorial ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades")," will be used for project name but feel free to choose any name you like."),(0,l.kt)("h2",{id:"the-genesis-data-model"},"The Genesis data model"),(0,l.kt)("p",null,"Now following the steps ",(0,l.kt)("a",{parentName:"p",href:"/getting-started/quick-start/define-the-data-model/"},"here")," we'll define our data model. Don't forget that the project name is ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades")," (or the one you chose). The model for the application is the following:"),(0,l.kt)("p",null,"A trade has:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"INSTRUMENT_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PRICE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"DOUBLE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"QUANTITY")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"INT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"SIDE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"ENUM")," with possible values ",(0,l.kt)("inlineCode",{parentName:"li"},"BUY")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"SELL")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_DATE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"DATE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_DATETIME")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"DATETIME")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ENTERED_BY")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_STATUS")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"ENUM")," with possible values ",(0,l.kt)("inlineCode",{parentName:"li"},"NEW"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"MODIFIED")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"CANCELLED")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"UNSOLICITED")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"BOOLEAN")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PREV_TRADE_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING"))),(0,l.kt)("p",null,"An alternate trade has:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ALTERNATE_TYPE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"TRADE_CODE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING"))),(0,l.kt)("p",null,"An instrument has:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"INSTRUMENT_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"INSTRUMENT_NAME")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING"))),(0,l.kt)("p",null,"An alternate instrument has:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"INSTRUMENT_ID")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ALTERNATE_TYPE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"INSTRUMENT_CODE")," of type ",(0,l.kt)("inlineCode",{parentName:"li"},"STRING"))),(0,l.kt)("p",null,"To define that model first start with the fields. Open ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades-fields-dictionary.kts")," under ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-sandbox/server/jvm/datapipeline-trades-config/src/main/resources/cfg")," (if you chose another project name don't forget to replace ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades")," with it) and enter the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'fields {\n    field(name = "TRADE_ID", type = STRING)\n    field(name = "INSTRUMENT_ID", type = STRING)\n    field(name = "PRICE", type = DOUBLE)\n    field(name = "QUANTITY", type = INT)\n    field(name = "SIDE", type = ENUM("BUY", "SELL", default = "BUY"))\n    field(name = "TRADE_DATE", type = DATE)\n    field(name = "TRADE_DATETIME", type = DATETIME)\n    field(name = "ENTERED_BY", type = STRING)\n    field(\n        name = "TRADE_STATUS", type = ENUM(\n            "NEW", "MODIFIED", "CANCELLED", \n            default = "NEW"\n        )\n    )\n    field(name = "UNSOLICITED", type = BOOLEAN, default = false)\n    field(name = "PREV_TRADE_ID", type = STRING)\n    field(name = "ALTERNATE_TYPE", type = STRING)\n    field(name = "TRADE_CODE", type = STRING)\n    field(name = "INSTRUMENT_NAME", type = STRING)\n    field(name = "INSTRUMENT_CODE", type = STRING)\n}\n')),(0,l.kt)("p",null,"After you have saved this file, run ",(0,l.kt)("strong",{parentName:"p"},"genesis-generated-fields"),"."),(0,l.kt)("p",null,"From the Gradle menu on the right of IntelliJ, this is:"),(0,l.kt)("p",null," ",(0,l.kt)("strong",{parentName:"p"},"genesisproduct-datapipeline-trades"),"/",(0,l.kt)("strong",{parentName:"p"},"datapipeline-trades-dictionary-cache"),"/",(0,l.kt)("strong",{parentName:"p"},"genesis-generated-fields"),"/",(0,l.kt)("strong",{parentName:"p"},"Tasks"),"/",(0,l.kt)("strong",{parentName:"p"},"genesis"),"/",(0,l.kt)("strong",{parentName:"p"},"generateFields")),(0,l.kt)("p",null," ",(0,l.kt)("img",{src:n(88185).Z,width:"421",height:"474"})),(0,l.kt)("p",null,"The build step will generate the fields that can be referenced from the tables and data pipelines configuration."),(0,l.kt)("p",null,"You can find more information on Fields ",(0,l.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields-tables-views/"},"here"),"."),(0,l.kt)("p",null,"The next step is to add the relevant ",(0,l.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields/"},"Fields")," to ",(0,l.kt)("a",{parentName:"p",href:"/database/fields-tables-views/tables/"},"Tables"),". Open ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades-tables-dictionary.kts")," under ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades/server/jvm/datapipeline-trades-config/src/main/resources/cfg")," (if you chose another project name don't forget to replace ",(0,l.kt)("inlineCode",{parentName:"p"},"datapipeline-trades")," with it) and enter the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'tables {\n    table(\n        name = "TRADE", id = 11000, audit = details(\n            id = 11001, sequence = "TR",\n            tsKey = true\n        )\n    ) {\n        sequence(TRADE_ID, "TR")\n        INSTRUMENT_ID not null\n        PRICE not null\n        QUANTITY not null\n        SIDE not null\n        TRADE_DATE\n        TRADE_DATETIME\n        ENTERED_BY\n        TRADE_STATUS\n        UNSOLICITED\n        PREV_TRADE_ID\n        primaryKey {\n            TRADE_ID\n        }\n    }\n    table(name = "ALT_TRADE_ID", id = 11002) {\n        TRADE_ID\n        ALTERNATE_TYPE\n        TRADE_CODE\n        primaryKey {\n            TRADE_ID\n            ALTERNATE_TYPE\n        }\n        indices {\n            unique(name = "ALT_TRADE_ID_BY_CODE") {\n                TRADE_CODE\n                ALTERNATE_TYPE\n            }\n        }\n    }\n    table(name = "INSTRUMENT", id = 11003) {\n        sequence(INSTRUMENT_ID, "IN")\n        INSTRUMENT_NAME\n        primaryKey {\n            INSTRUMENT_ID\n        }\n    }\n    table(name = "ALT_INSTRUMENT_ID", id = 11004) {\n        INSTRUMENT_ID\n        ALTERNATE_TYPE\n        INSTRUMENT_CODE\n        primaryKey {\n            INSTRUMENT_ID\n            ALTERNATE_TYPE\n        }\n        indices {\n            unique(name = "ALT_INSTRUMENT_ID_BY_CODE") {\n                INSTRUMENT_CODE\n                ALTERNATE_TYPE\n            }\n        }\n    }\n}\n')),(0,l.kt)("p",null,"After you have saved this file, run ",(0,l.kt)("strong",{parentName:"p"},"genesis-generated-dao"),"."),(0,l.kt)("p",null,"From the Gradle menu, this is:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"genesisproduct-datapipeline-trades"),"/",(0,l.kt)("strong",{parentName:"p"},"datapipeline-trades-dictionary-cache"),"/",(0,l.kt)("strong",{parentName:"p"},"genesis-generated-dao"),"/",(0,l.kt)("strong",{parentName:"p"},"Tasks"),"/",(0,l.kt)("strong",{parentName:"p"},"genesis"),"/",(0,l.kt)("strong",{parentName:"p"},"generateDAO")),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(94767).Z,width:"421",height:"474"})),(0,l.kt)("p",null,"The build step will generate the tables definitions along with data access objects (DAO) that will be referenced from the data pipeline configuration."),(0,l.kt)("p",null,"You can find more information on Tables ",(0,l.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields-tables-views/"},"here"),"."))}T.isMDXComponent=!0},88185:function(e,t,n){t.Z=n.p+"assets/images/build-gradle-kts-fields-dda7d15a1fce367439da670978602f23.png"},94767:function(e,t,n){t.Z=n.p+"assets/images/build-gradle-kts-generated-dao-c3e584280d2b372eaefe2256ae3a3236.png"}}]);