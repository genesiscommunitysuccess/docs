"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[29843],{4230:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return r},metadata:function(){return d},toc:function(){return c}});var a=n(87462),i=n(63366),l=(n(67294),n(3905)),o=(n(61839),["components"]),r={title:"Go to the next level - Show data using Data Grid",sidebar_label:"Data Grid",id:"data-grid",keywords:["getting started","quick start","next level","data grid"],tags:["getting started","quick start","next level","data grid"]},s=void 0,d={unversionedId:"getting-started/go-to-the-next-level/data-grid",id:"getting-started/go-to-the-next-level/data-grid",title:"Go to the next level - Show data using Data Grid",description:"Prerequisites",source:"@site/docs/01_getting-started/03_go-to-the-next-level/05_data-grid.md",sourceDirName:"01_getting-started/03_go-to-the-next-level",slug:"/getting-started/go-to-the-next-level/data-grid",permalink:"/next/getting-started/go-to-the-next-level/data-grid",draft:!1,tags:[{label:"getting started",permalink:"/next/tags/getting-started"},{label:"quick start",permalink:"/next/tags/quick-start"},{label:"next level",permalink:"/next/tags/next-level"},{label:"data grid",permalink:"/next/tags/data-grid"}],version:"current",sidebarPosition:5,frontMatter:{title:"Go to the next level - Show data using Data Grid",sidebar_label:"Data Grid",id:"data-grid",keywords:["getting started","quick start","next level","data grid"],tags:["getting started","quick start","next level","data grid"]},sidebar:"learningSidebar",previous:{title:"User interaction",permalink:"/next/getting-started/go-to-the-next-level/events"},next:{title:"Create a form to input data",permalink:"/next/getting-started/go-to-the-next-level/forms"}},p={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Connecting the back end and front end",id:"connecting-the-back-end-and-front-end",level:3},{value:"Installing the dependencies",id:"installing-the-dependencies",level:3},{value:"API Host",id:"api-host",level:3},{value:"Section objectives",id:"section-objectives",level:2},{value:"Showing all positions",id:"showing-all-positions",level:2},{value:"Grid interaction",id:"grid-interaction",level:2},{value:"Custom column config",id:"custom-column-config",level:2},{value:"Saving user preferences",id:"saving-user-preferences",level:2}],g={toc:c};function u(e){var t=e.components,r=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,"There are a couple of steps that have to be done before seeing the user interface running."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"your database must be running"),(0,l.kt)("li",{parentName:"ul"},"the back-end services must be deployed"),(0,l.kt)("li",{parentName:"ul"},"you must have imported the example data in the csv files")),(0,l.kt)("h3",{id:"connecting-the-back-end-and-front-end"},"Connecting the back end and front end"),(0,l.kt)("p",null,"In this step, we shall configure an nginx server working as a reverse proxy."),(0,l.kt)("p",null,"In your CentOS terminal, enter the following three commands:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Enter your artifactory credentials:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker login genesisglobal-docker-internal.jfrog.io\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Pull the latest version of the Genesis software:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull genesisglobal-docker-internal.jfrog.io/genesis-console-proxy:latest\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Run the following command:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it --rm -d -p 80:80 -p 443:443 --name genesis-console-proxy --add-host localnode:$(hostname -I) genesisglobal-docker-internal.jfrog.io/genesis-console-proxy\n")),(0,l.kt)("h3",{id:"installing-the-dependencies"},"Installing the dependencies"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Before we make any changes, you need to install your npm dependencies; run the following in your terminal:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="./client"',title:'"./client"'},"npm run bootstrap\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Once you have all dependencies installed, use the following command in the terminal to run your UI:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="./client"',title:'"./client"'},"npm run dev\n")),(0,l.kt)("p",null,"The application will open at ",(0,l.kt)("inlineCode",{parentName:"p"},"http://localhost:6060/login"),".\n",(0,l.kt)("img",{src:n(31371).Z,width:"2646",height:"1452"})),(0,l.kt)("h3",{id:"api-host"},"API Host"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"API_HOST")," should be set correctly by default from the ",(0,l.kt)("inlineCode",{parentName:"p"},"genx")," CLI, but if you are having issues see ",(0,l.kt)("a",{parentName:"p",href:"/next/getting-started/quick-start/run-the-application#api-host"},"this section"),"."),(0,l.kt)("h2",{id:"section-objectives"},"Section objectives"),(0,l.kt)("p",null,"The goal of this section is to run the UI for the first time and add a data grid."),(0,l.kt)("h2",{id:"showing-all-positions"},"Showing all positions"),(0,l.kt)("p",null,"For your user interface, the ",(0,l.kt)("inlineCode",{parentName:"p"},"genx")," process has generated the following files:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"home.template.ts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"home.ts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"home.styles.ts"))),(0,l.kt)("p",null,"In the template file, start by adding the Genesis data source pointing to the appropriate resource name; this must be wrapped in a grid of your choice."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="home.template.ts"',title:'"home.template.ts"'},'<zero-grid-pro>\n    <grid-pro-genesis-datasource\n        resourceName="ALL_POSITIONS"\n        orderBy="INSTRUMENT_ID">\n    </grid-pro-genesis-datasource>\n</zero-grid-pro>\n')),(0,l.kt)("p",null,"This will result in a grid displaying all the columns available in the ",(0,l.kt)("inlineCode",{parentName:"p"},"ALL_POSITIONS")," resource:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(32938).Z,width:"1911",height:"543"})),(0,l.kt)("h2",{id:"grid-interaction"},"Grid interaction"),(0,l.kt)("p",null,"To add new columns that are not part of the API, we can add additional column definitions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:'{6} title="home.template.ts"',"{6}":!0,title:'"home.template.ts"'},'<zero-grid-pro>\n    <grid-pro-genesis-datasource\n        resourceName="ALL_POSITIONS"\n        orderBy="INSTRUMENT_ID">\n    </grid-pro-genesis-datasource>\n    <grid-pro-column :definition="${x => x.singlePositionActionColDef}" />\n</zero-grid-pro>\n\n')),(0,l.kt)("p",null,"In the component definition file, we can provide a method that enables us to interact with the rest of the class.\nThe example below creates a column with a button that logs data in the row to the console.\nHere you can easily swap logging the row data with some custom logic (such as calling a back-end api, which we shall cover in more detail later on)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="home.ts"',title:'"home.ts"'},"  public singlePositionActionColDef = {\n    headerName: 'Action',\n    minWidth: 120,\n    maxWidth: 120,\n    cellRenderer: 'action',\n    cellRendererParams: {\n      actionClick: async (rowData) => {\n        console.log(rowData);\n      },\n      actionName: 'Add Trade',\n      appearance: 'primary-gradient',\n    },\n    pinned: 'right',\n  };\n")),(0,l.kt)("p",null,"After refreshing the application, the grid should now also include a column containing a button:"),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(5011).Z,width:"1911",height:"465"})),(0,l.kt)("h2",{id:"custom-column-config"},"Custom column config"),(0,l.kt)("p",null,"If you want to customise how each column is displayed, you can provide a column config for every column."),(0,l.kt)("p",null,"Create a new file called ",(0,l.kt)("strong",{parentName:"p"},"positionColumnDefs.ts")," in the same directory."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="positionColumnDefs.ts"',title:'"positionColumnDefs.ts"'},"export const positionColumnDefs = [\n  {field: 'INSTRUMENT_ID', headerName: 'Instrument', sort: 'desc', flex: 2},\n  {field: 'QUANTITY', headerName: 'Quantity', type: 'rightAligned', flex: 1, enableCellChangeFlash: true},\n  {field: 'NOTIONAL', headerName: 'Traded Value', type: 'rightAligned', flex: 1, enableCellChangeFlash: true},\n  {field: 'VALUE', headerName: 'Market Value', type: 'rightAligned', flex: 1, enableCellChangeFlash: true},\n  {field: 'PNL', headerName: 'PNL', type: 'rightAligned', flex: 1, enableCellChangeFlash: true},\n];\n")),(0,l.kt)("p",null,"To stop automatic generation of columns, you need to add the ",(0,l.kt)("inlineCode",{parentName:"p"},"only-template-col-defs")," attribute to the zero-grid-pro."),(0,l.kt)("p",null,"Then use the ",(0,l.kt)("a",{parentName:"p",href:"https://www.fast.design/docs/fast-element/using-directives/#the-repeat-directive"},"repeat")," directive; this includes all the columns from our column config array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{1,2,6,12-14} title="home.template.ts"',"{1,2,6,12-14}":!0,title:'"home.template.ts"'},'import {positionColumnDefs} from \'./positionColumnDefs\';\nimport {repeat} from \'@microsoft/fast-element\';\n\n<zero-grid-pro only-template-col-defs>\n    <grid-pro-genesis-datasource\n        resourceName="ALL_POSITIONS"\n        orderBy="INSTRUMENT_ID">\n    </grid-pro-genesis-datasource>\n    ${repeat(() => positionColumnDefs, html`\n    <grid-pro-column :definition="${x => x}"></grid-pro-column>\n    `)}\n    <grid-pro-column :definition="${x => x.singlePositionActionColDef}"></grid-pro-column>\n</zero-grid-pro>\n')),(0,l.kt)("p",null,"Columns will now flash green as the value inside changes:\n",(0,l.kt)("img",{src:n(50134).Z,width:"1906",height:"848"})),(0,l.kt)("h2",{id:"saving-user-preferences"},"Saving user preferences"),(0,l.kt)("p",null,"You can add the ",(0,l.kt)("inlineCode",{parentName:"p"},"persist-column-state-key")," to the zero-grid-pro to persist user changes to things such as sorting, column order, and visibility on the user machine. With this, when the user reloads the browser, they get the same configuration."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html",metastring:"{2}","{2}":!0},"<zero-grid-pro\n    persist-column-state-key='position-grid-settings'\n>\n")))}u.isMDXComponent=!0},31371:function(e,t,n){t.Z=n.p+"assets/images/btfe--positions-example--login-b842defd95fc76ba8800dd4a1a825944.png"},5011:function(e,t,n){t.Z=n.p+"assets/images/positions-grid-with-button-aba3e29dc7cb5a0ee934c9dfea319932.png"},50134:function(e,t,n){t.Z=n.p+"assets/images/positions-grid-with-cell-change-flash-992933d16c7c5f3c8d5ed8d0bee078ab.png"},32938:function(e,t,n){t.Z=n.p+"assets/images/positions-grid-fec469fa7b75730f3640f1c49944c421.png"}}]);