"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[98965],{22370:function(n,e,t){t.r(e),t.d(e,{assets:function(){return v},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return r}});var a=t(87462),i=t(63366),s=(t(67294),t(3905)),l=(t(61839),["components"]),d={id:"guide-5",sidebar_label:"The Event Handler file",sidebar_position:50,title:"The Event Handler file"},o=void 0,m={unversionedId:"getting-started/use-cases/excel-to-genesis/Files/guide-5",id:"version-2022.3/getting-started/use-cases/excel-to-genesis/Files/guide-5",title:"The Event Handler file",description:"This file provides insert, modify and delete events for each table generated.",source:"@site/versioned_docs/version-2022.3/01_getting-started/05_use-cases/excel-to-genesis/Files/guide-5.md",sourceDirName:"01_getting-started/05_use-cases/excel-to-genesis/Files",slug:"/getting-started/use-cases/excel-to-genesis/Files/guide-5",permalink:"/getting-started/use-cases/excel-to-genesis/Files/guide-5",draft:!1,tags:[],version:"2022.3",sidebarPosition:50,frontMatter:{id:"guide-5",sidebar_label:"The Event Handler file",sidebar_position:50,title:"The Event Handler file"},sidebar:"learningSidebar",previous:{title:"The view dictionary",permalink:"/getting-started/use-cases/excel-to-genesis/Files/guide-13"},next:{title:"The Request Server file",permalink:"/getting-started/use-cases/excel-to-genesis/Files/guide-6"}},v={},r=[],c={toc:r};function g(n){var e=n.components,t=(0,i.Z)(n,l);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This file provides insert, modify and delete events for each table generated."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'eventHandler {\n  eventHandler<CashMgmtDashboard>(name = "CASH_MGMT_DASHBOARD_INSERT") {\n    onCommit { event ->\n      val cashMgmtDashboard = event.details\n      entityDb.insert(cashMgmtDashboard)\n      ack()\n    }\n  }\n  eventHandler<CashMgmtDashboard>(name = "CASH_MGMT_DASHBOARD_MODIFY") {\n    onCommit { event ->\n      val cashMgmtDashboard = event.details\n      entityDb.modify(cashMgmtDashboard)\n      ack()\n    }\n  }\n  eventHandler<CashMgmtDashboard>(name = "CASH_MGMT_DASHBOARD_DELETE") {\n    onCommit { event ->\n      val cashMgmtDashboard = event.details\n      entityDb.delete(cashMgmtDashboard)\n      ack()\n    }\n  }\n  eventHandler<ConsolidatedFunds>(name = "CONSOLIDATED_FUNDS_INSERT") {\n    onCommit { event ->\n      val consolidatedFunds = event.details\n      entityDb.insert(consolidatedFunds)\n      ack()\n    }\n  }\n  eventHandler<ConsolidatedFunds>(name = "CONSOLIDATED_FUNDS_MODIFY") {\n    onCommit { event ->\n      val consolidatedFunds = event.details\n      entityDb.modify(consolidatedFunds)\n      ack()\n    }\n  }\n  eventHandler<ConsolidatedFunds>(name = "CONSOLIDATED_FUNDS_DELETE") {\n    onCommit { event ->\n      val consolidatedFunds = event.details\n      entityDb.delete(consolidatedFunds)\n      ack()\n    }\n  }\n  eventHandler<CashMvmntOrders>(name = "CASH_MVMNT_ORDERS_INSERT") {\n    onCommit { event ->\n      val cashMvmntOrders = event.details\n      entityDb.insert(cashMvmntOrders)\n      ack()\n    }\n  }\n  eventHandler<CashMvmntOrders>(name = "CASH_MVMNT_ORDERS_MODIFY") {\n    onCommit { event ->\n      val cashMvmntOrders = event.details\n      entityDb.modify(cashMvmntOrders)\n      ack()\n    }\n  }\n  eventHandler<CashMvmntOrders>(name = "CASH_MVMNT_ORDERS_DELETE") {\n    onCommit { event ->\n      val cashMvmntOrders = event.details\n      entityDb.delete(cashMvmntOrders)\n      ack()\n    }\n  }\n  eventHandler<MarginAggregate>(name = "MARGIN_AGGREGATE_INSERT") {\n    onCommit { event ->\n      val marginAggregate = event.details\n      entityDb.insert(marginAggregate)\n      ack()\n    }\n  }\n  eventHandler<MarginAggregate>(name = "MARGIN_AGGREGATE_MODIFY") {\n    onCommit { event ->\n      val marginAggregate = event.details\n      entityDb.modify(marginAggregate)\n      ack()\n    }\n  }\n  eventHandler<MarginAggregate>(name = "MARGIN_AGGREGATE_DELETE") {\n    onCommit { event ->\n      val marginAggregate = event.details\n      entityDb.delete(marginAggregate)\n      ack()\n    }\n  }\n  eventHandler<CustodyPositions>(name = "CUSTODY_POSITIONS_INSERT") {\n    onCommit { event ->\n      val custodyPositions = event.details\n      entityDb.insert(custodyPositions)\n      ack()\n    }\n  }\n  eventHandler<CustodyPositions>(name = "CUSTODY_POSITIONS_MODIFY") {\n    onCommit { event ->\n      val custodyPositions = event.details\n      entityDb.modify(custodyPositions)\n      ack()\n    }\n  }\n  eventHandler<CustodyPositions>(name = "CUSTODY_POSITIONS_DELETE") {\n    onCommit { event ->\n      val custodyPositions = event.details\n      entityDb.delete(custodyPositions)\n      ack()\n    }\n  }\n  eventHandler<MarginCalls>(name = "MARGIN_CALLS_INSERT") {\n    onCommit { event ->\n      val marginCalls = event.details\n      entityDb.insert(marginCalls)\n      ack()\n    }\n  }\n  eventHandler<MarginCalls>(name = "MARGIN_CALLS_MODIFY") {\n    onCommit { event ->\n      val marginCalls = event.details\n      entityDb.modify(marginCalls)\n      ack()\n    }\n  }\n  eventHandler<MarginCalls>(name = "MARGIN_CALLS_DELETE") {\n    onCommit { event ->\n      val marginCalls = event.details\n      entityDb.delete(marginCalls)\n      ack()\n    }\n  }\n  eventHandler<FundAdminBalances>(name = "FUND_ADMIN_BALANCES_INSERT") {\n    onCommit { event ->\n      val fundAdminBalances = event.details\n      entityDb.insert(fundAdminBalances)\n      ack()\n    }\n  }\n  eventHandler<FundAdminBalances>(name = "FUND_ADMIN_BALANCES_MODIFY") {\n    onCommit { event ->\n      val fundAdminBalances = event.details\n      entityDb.modify(fundAdminBalances)\n      ack()\n    }\n  }\n  eventHandler<FundAdminBalances>(name = "FUND_ADMIN_BALANCES_DELETE") {\n    onCommit { event ->\n      val fundAdminBalances = event.details\n      entityDb.delete(fundAdminBalances)\n      ack()\n    }\n  }\n  eventHandler<FundNav>(name = "FUND_NAV_INSERT") {\n    onCommit { event ->\n      val fundNav = event.details\n      entityDb.insert(fundNav)\n      ack()\n    }\n  }\n  eventHandler<FundNav>(name = "FUND_NAV_MODIFY") {\n    onCommit { event ->\n      val fundNav = event.details\n      entityDb.modify(fundNav)\n      ack()\n    }\n  }\n  eventHandler<FundNav>(name = "FUND_NAV_DELETE") {\n    onCommit { event ->\n      val fundNav = event.details\n      entityDb.delete(fundNav)\n      ack()\n    }\n  }\n  eventHandler<TBillHoldings>(name = "T_BILL_HOLDINGS_INSERT") {\n    onCommit { event ->\n      val tBillHoldings = event.details\n      entityDb.insert(tBillHoldings)\n      ack()\n    }\n  }\n  eventHandler<TBillHoldings>(name = "T_BILL_HOLDINGS_MODIFY") {\n    onCommit { event ->\n      val tBillHoldings = event.details\n      entityDb.modify(tBillHoldings)\n      ack()\n    }\n  }\n  eventHandler<TBillHoldings>(name = "T_BILL_HOLDINGS_DELETE") {\n    onCommit { event ->\n      val tBillHoldings = event.details\n      entityDb.delete(tBillHoldings)\n      ack()\n    }\n  }\n  eventHandler<FundHoldings>(name = "FUND_HOLDINGS_INSERT") {\n    onCommit { event ->\n      val fundHoldings = event.details\n      entityDb.insert(fundHoldings)\n      ack()\n    }\n  }\n  eventHandler<FundHoldings>(name = "FUND_HOLDINGS_MODIFY") {\n    onCommit { event ->\n      val fundHoldings = event.details\n      entityDb.modify(fundHoldings)\n      ack()\n    }\n  }\n  eventHandler<FundHoldings>(name = "FUND_HOLDINGS_DELETE") {\n    onCommit { event ->\n      val fundHoldings = event.details\n      entityDb.delete(fundHoldings)\n      ack()\n    }\n  }\n  eventHandler<Mapping>(name = "MAPPING_INSERT") {\n    onCommit { event ->\n      val mapping = event.details\n      entityDb.insert(mapping)\n      ack()\n    }\n  }\n  eventHandler<Mapping>(name = "MAPPING_MODIFY") {\n    onCommit { event ->\n      val mapping = event.details\n      entityDb.modify(mapping)\n      ack()\n    }\n  }\n  eventHandler<Mapping>(name = "MAPPING_DELETE") {\n    onCommit { event ->\n      val mapping = event.details\n      entityDb.delete(mapping)\n      ack()\n    }\n  }\n  eventHandler<ColSummary>(name = "COL_SUMMARY_INSERT") {\n    onCommit { event ->\n      val colSummary = event.details\n      entityDb.insert(colSummary)\n      ack()\n    }\n  }\n  eventHandler<ColSummary>(name = "COL_SUMMARY_MODIFY") {\n    onCommit { event ->\n      val colSummary = event.details\n      entityDb.modify(colSummary)\n      ack()\n    }\n  }\n  eventHandler<ColSummary>(name = "COL_SUMMARY_DELETE") {\n    onCommit { event ->\n      val colSummary = event.details\n      entityDb.delete(colSummary)\n      ack()\n    }\n  }\n  eventHandler<Sheet>(name = "SHEET_INSERT") {\n    onCommit { event ->\n      val sheet = event.details\n      entityDb.insert(sheet)\n      ack()\n    }\n  }\n  eventHandler<Sheet>(name = "SHEET_MODIFY") {\n    onCommit { event ->\n      val sheet = event.details\n      entityDb.modify(sheet)\n      ack()\n    }\n  }\n  eventHandler<Sheet>(name = "SHEET_DELETE") {\n    onCommit { event ->\n      val sheet = event.details\n      entityDb.delete(sheet)\n      ack()\n    }\n  }\n}\n')))}g.isMDXComponent=!0}}]);