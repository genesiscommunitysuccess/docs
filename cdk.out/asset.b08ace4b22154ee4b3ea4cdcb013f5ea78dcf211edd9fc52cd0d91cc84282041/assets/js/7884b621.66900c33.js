"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[12263],{6267:function(e,t,s){s.r(t),s.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return p}});var r=s(87462),a=s(63366),n=(s(67294),s(3905)),i=(s(61839),["components"]),l={title:"Modules - Inside a Request Server",sidebar_label:"Inside a Request Server",id:"inside-a-request-server",keywords:["getting started","basics","modules","request server"],tags:["getting started","basics","modules","request server"]},u=void 0,o={unversionedId:"getting-started/learn-the-basics/modules/inside-a-request-server",id:"version-2022.3/getting-started/learn-the-basics/modules/inside-a-request-server",title:"Modules - Inside a Request Server",description:"A Request Server supplies static data to the front end of your application.",source:"@site/versioned_docs/version-2022.3/01_getting-started/01_learn-the-basics/07_modules/02_inside-a-request-server copy.md",sourceDirName:"01_getting-started/01_learn-the-basics/07_modules",slug:"/getting-started/learn-the-basics/modules/inside-a-request-server",permalink:"/getting-started/learn-the-basics/modules/inside-a-request-server",draft:!1,tags:[{label:"getting started",permalink:"/tags/getting-started"},{label:"basics",permalink:"/tags/basics"},{label:"modules",permalink:"/tags/modules"},{label:"request server",permalink:"/tags/request-server"}],version:"2022.3",sidebarPosition:2,frontMatter:{title:"Modules - Inside a Request Server",sidebar_label:"Inside a Request Server",id:"inside-a-request-server",keywords:["getting started","basics","modules","request server"],tags:["getting started","basics","modules","request server"]},sidebar:"learningSidebar",previous:{title:"Inside a Data Server",permalink:"/getting-started/learn-the-basics/modules/inside-a-data-server"},next:{title:"Inside an Event Handler",permalink:"/getting-started/learn-the-basics/modules/inside-an-event-handler"}},d={},p=[],c={toc:p};function h(e){var t=e.components,s=(0,a.Z)(e,i);return(0,n.kt)("wrapper",(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A Request Server supplies static data to the front end of your application."),(0,n.kt)("p",null,"Request Servers, (otherwise known as request/replies and often shortened to reqrep) retrieve a snapshot of data from a table or a view on demand and serve it up to the requesting client. Typically, this is data requested by the front end."),(0,n.kt)("p",null,"When the request is received, the Request Server replies with a single response. Once the response is received, the transaction has been completed."),(0,n.kt)("p",null,"You specify all your Request Servers as requestReply queries in a single Kotlin script file. If your application is called bravo, then this file will be called ",(0,n.kt)("strong",{parentName:"p"},"bravo-reqrep.kts"),". Each requestReply query is designed to supply all or some data from the specified table or view."),(0,n.kt)("p",null,"Here is a simple example of a Request Server file. It defines three requestReply queries:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the first returns all the fields in the COUNTERPARTY table"),(0,n.kt)("li",{parentName:"ul"},"the second returns all the fields in the EXCHANGE table"),(0,n.kt)("li",{parentName:"ul"},"the third includes a  request block, which specifies the two fields ALTERNATE_TYPE and INSTRUMENT_CODE as a primary key; it responds with four fields from the INSTRUMENT_DETAILS table")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'requestReplies {\n    requestReply(COUNTERPARTY)\n\n    requestReply(EXCHANGE)\n\n    requestReply(INSTRUMENT_DETAILS) {\n        request {\n            ALTERNATE_TYPE\n            INSTRUMENT_CODE withAlias "ALTERNATE_CODE"\n        }\n\n        reply {\n            INSTRUMENT_CODE\n            INSTRUMENT_ID\n            INSTRUMENT_NAME\n            LAST_TRADED_PRICE\n        }\n    }\n}\n')),(0,n.kt)("p",null,"Your application will certainly have many more queries, but that covers the basics. Generally speaking, if you create your tables and views carefully, you can keep your ",(0,n.kt)("strong",{parentName:"p"},"reqrep.kts")," simple."))}h.isMDXComponent=!0}}]);