"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[53474],{85162:function(e,n,t){t.d(n,{Z:function(){return a}});var i=t(67294),s=t(86010),r="tabItem_Ymn6";function a(e){var n=e.children,t=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,a),hidden:t},n)}},65488:function(e,n,t){t.d(n,{Z:function(){return m}});var i=t(87462),s=t(67294),r=t(86010),a=t(72389),o=t(67392),l=t(7094),u=t(12466),p="tabList__CuJ",d="tabItem_LNqP";function c(e){var n,t,a=e.lazy,c=e.block,m=e.defaultValue,h=e.values,f=e.groupId,v=e.className,g=s.Children.map(e.children,(function(e){if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=h?h:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,o.l)(b,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var T=null===m?m:null!=(n=null!=m?m:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:g[0].props.value;if(null!==T&&!b.some((function(e){return e.value===T})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.U)(),N=y.tabGroupChoices,E=y.setTabGroupChoices,C=(0,s.useState)(T),_=C[0],P=C[1],w=[],H=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var S=N[f];null!=S&&S!==_&&b.some((function(e){return e.value===S}))&&P(S)}var O=function(e){var n=e.currentTarget,t=w.indexOf(n),i=b[t].value;i!==_&&(H(n),P(i),null!=f&&E(f,String(i)))},I=function(e){var n,t=null;switch(e.key){case"ArrowRight":var i,s=w.indexOf(e.currentTarget)+1;t=null!=(i=w[s])?i:w[0];break;case"ArrowLeft":var r,a=w.indexOf(e.currentTarget)-1;t=null!=(r=w[a])?r:w[w.length-1]}null==(n=t)||n.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",p)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},v)},b.map((function(e){var n=e.value,t=e.label,a=e.attributes;return s.createElement("li",(0,i.Z)({role:"tab",tabIndex:_===n?0:-1,"aria-selected":_===n,key:n,ref:function(e){return w.push(e)},onKeyDown:I,onFocus:O,onClick:O},a,{className:(0,r.Z)("tabs__item",d,null==a?void 0:a.className,{"tabs__item--active":_===n})}),null!=t?t:n)}))),a?(0,s.cloneElement)(g.filter((function(e){return e.props.value===_}))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},g.map((function(e,n){return(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==_})}))))}function m(e){var n=(0,a.Z)();return s.createElement(c,(0,i.Z)({key:String(n)},e))}},60533:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return m}});var i=t(87462),s=t(63366),r=(t(67294),t(3905)),a=(t(61839),t(65488)),o=t(85162),l=["components"],u={title:"Custom Endpoints - Basics",sidebar_label:"Basics",id:"basics",keywords:["server","integration","custom endpoints","basics"],tags:["server","integration","custom endpoints","basics"]},p=void 0,d={unversionedId:"server/integration/custom-endpoints/basics",id:"server/integration/custom-endpoints/basics",title:"Custom Endpoints - Basics",description:"Introduction | Basics |  Advanced | Examples | Configuring runtime | Testing",source:"@site/docs/03_server/10_integration/07_custom-endpoints/02_basics.md",sourceDirName:"03_server/10_integration/07_custom-endpoints",slug:"/server/integration/custom-endpoints/basics",permalink:"/next/server/integration/custom-endpoints/basics",draft:!1,tags:[{label:"server",permalink:"/next/tags/server"},{label:"integration",permalink:"/next/tags/integration"},{label:"custom endpoints",permalink:"/next/tags/custom-endpoints"},{label:"basics",permalink:"/next/tags/basics"}],version:"current",sidebarPosition:2,frontMatter:{title:"Custom Endpoints - Basics",sidebar_label:"Basics",id:"basics",keywords:["server","integration","custom endpoints","basics"],tags:["server","integration","custom endpoints","basics"]},sidebar:"serverModulesSidebar",previous:{title:"Introduction",permalink:"/next/server/integration/custom-endpoints/introduction"},next:{title:"Advanced",permalink:"/next/server/integration/custom-endpoints/advanced"}},c={},m=[{value:"FileProcessor class",id:"fileprocessor-class",level:2},{value:"A simple example of a custom endpoint",id:"a-simple-example-of-a-custom-endpoint",level:2},{value:"Construction and initialisation",id:"construction-and-initialisation",level:2},{value:"Endpoint name",id:"endpoint-name",level:2},{value:"Allowed methods",id:"allowed-methods",level:2},{value:"Processing requests",id:"processing-requests",level:2},{value:"Authentication",id:"authentication",level:2}],h={toc:m};function f(e){var n=e.components,t=(0,s.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/introduction/"},"Introduction")," | ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/basics/"},"Basics")," |  ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/advanced/"},"Advanced")," | ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/examples/"},"Examples")," | ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/configuring-runtime/"},"Configuring runtime")," | ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/testing/"},"Testing")),(0,r.kt)("p",null,"Custom endpoints are defined within their own submodule of the project, using classes implementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"WebEndpoint")," interface provided by Genesis-Router.\nAs these are additional endpoints on Genesis-Router, you need to add the ",(0,r.kt)("inlineCode",{parentName:"p"},"genesis-router")," module as a dependency on your submodule."),(0,r.kt)("p",null,"In their initialisation, the classes need to call on the ",(0,r.kt)("inlineCode",{parentName:"p"},"registerEndpoint")," method of an injected ",(0,r.kt)("inlineCode",{parentName:"p"},"WebEndpointRegistry")," object."),(0,r.kt)("h2",{id:"fileprocessor-class"},"FileProcessor class"),(0,r.kt)(a.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Module\nclass FileProcessor @Inject constructor(\n    private val registry: WebEndpointRegistry\n) : WebEndpoint {\n    @PostConstruct\n    fun init() {\n        registry.registerEndpoint("file-handler", this)\n    }\n}\n'))),(0,r.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Module\npublic class FileProcessor implements WebEndpoint {\n\n    private final WebEndpointRegistry registry;\n\n    @Inject\n    public FileProcessor(WebEndpointRegistry registry) {\n        this.registry = registry;\n    }\n\n    @PostConstruct\n    public void init() {\n        this.registry.registerEndpoint("file-handler", this);\n    }\n}\n')))),(0,r.kt)("h2",{id:"a-simple-example-of-a-custom-endpoint"},"A simple example of a custom endpoint"),(0,r.kt)("p",null,"Here is a simple example of a custom endpoint class. It defines an endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"file-handler/upload")," that takes file-uploads and responds to their success with an HTTP 200 OK message."),(0,r.kt)(a.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Module\nclass FileProcessor @Inject constructor(\n    private val registry: WebEndpointRegistry\n) : WebEndpoint {\n    @PostConstruct\n    fun init() {\n        registry.registerEndpoint("file-handler", this)\n    }\n\n    override fun name(): String {\n        return "upload"\n    }\n\n    override fun allowedMethods(): Set<RequestType> {\n        return ALLOWED_HTTP_METHODS\n    }\n\n    override fun process(s: String, fullHttpRequest: FullHttpRequest, channel: Channel): Any {\n        LOG.debug("Hit {}/{} endpoint", "file-handler", name())\n        val responseJson = "{ \\"Result\\": \\"Successful upload\\"}".toByteArray(StandardCharsets.UTF_8)\n        val responseBuffer = Unpooled.wrappedBuffer(responseJson)\n        val response = DefaultFullHttpResponse(\n            HttpVersion.HTTP_1_1,\n            HttpResponseStatus.OK,\n            responseBuffer\n        )\n        response.headers().add(HttpHeaderNames.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON)\n        HttpUtil.setContentLength(response, responseJson.size.toLong())\n        return response\n    }\n\n    override fun requiresAuth(): Boolean {\n        return if (System.getProperty("TEST_MODE") != null) {\n            false\n        } else {\n            super.requiresAuth()\n        }\n    }\n\n    companion object {\n        private val LOG = LoggerFactory.getLogger(FileProcessorKotlin::class.java)\n        private val ALLOWED_HTTP_METHODS: Set<RequestType> = ImmutableSet.of(RequestType.POST)\n    }\n}\n'))),(0,r.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Module\npublic class FileProcessor implements WebEndpoint {\n\n    private static final Logger LOG = LoggerFactory.getLogger(FileProcessor.class);\n    private static final Set<RequestType> ALLOWED_HTTP_METHODS = ImmutableSet.of(RequestType.POST);\n\n    private final WebEndpointRegistry registry;\n\n    @Inject\n    public FileProcessor(WebEndpointRegistry registry) {\n        this.registry = registry;\n    }\n\n    @PostConstruct\n    public void init() {\n        this.registry.registerEndpoint("file-handler", this);\n    }\n\n    @NotNull\n    @Override\n    public String name() {\n        return "upload";\n    }\n\n    @NotNull\n    @Override\n    public Set<RequestType> allowedMethods() {\n        return ALLOWED_HTTP_METHODS;\n    }\n\n    @NotNull\n    @Override\n    public Object process(@NotNull String s, @NotNull FullHttpRequest fullHttpRequest, @NotNull Channel channel) {\n        LOG.debug("Hit {}/{} endpoint", "file-handler", name());\n        final byte[] responseJson = "{ \\"Result\\": \\"Successful upload\\"}".getBytes(StandardCharsets.UTF_8);\n        final ByteBuf responseBuffer = Unpooled.wrappedBuffer(responseJson);\n        final DefaultFullHttpResponse response = new DefaultFullHttpResponse(\n                HttpVersion.HTTP_1_1,\n                HttpResponseStatus.OK,\n                responseBuffer\n        );\n        response.headers().add(HttpHeaderNames.CONTENT_TYPE, HttpHeaderValues.APPLICATION_JSON);\n        HttpUtil.setContentLength(response, responseJson.length);\n        return response;\n    }\n\n    @Override\n    public boolean requiresAuth() {\n        if(System.getProperty("TEST_MODE") != null){\n            return false;\n        } else {\n            return WebEndpoint.super.requiresAuth();\n        }\n    }\n\n}\n')))),(0,r.kt)("h2",{id:"construction-and-initialisation"},"Construction and initialisation"),(0,r.kt)("p",null,"The constructor should contain an instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"WebEndpointRegistry")," class in order to call upon it during initialisation. This is necessary so that Genesis Router can automatically route appropriate traffic to this endpoint."),(0,r.kt)("p",null,"In the examples above, the initialisation step is annotated with ",(0,r.kt)("inlineCode",{parentName:"p"},"@PostConstruct"),", and calls upon the ",(0,r.kt)("inlineCode",{parentName:"p"},"WebEndpointRegistry.registerEndpoint()")," function with the subdirectory of the endpoint, and the endpoint itself. The registered endpoint would be reachable at a combination of this subdirectory, and the return value of the endpoint's ",(0,r.kt)("inlineCode",{parentName:"p"},"name()")," function. In the example above, this would be ",(0,r.kt)("inlineCode",{parentName:"p"},"file-handler/upload"),"."),(0,r.kt)("h2",{id:"endpoint-name"},"Endpoint name"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"name()")," method must be overridden to provide the endpoint a name."),(0,r.kt)("h2",{id:"allowed-methods"},"Allowed methods"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"allowedMethods()")," function must be overridden and implemented to declare which of the HTTP request types are permitted for this endpoint. It must return a set of ",(0,r.kt)("inlineCode",{parentName:"p"},"RequestType")," objects corresponding with the HTTP ",(0,r.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PUT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PATCH"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE")," functions."),(0,r.kt)("h2",{id:"processing-requests"},"Processing requests"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"process()")," function must be overridden and implemented in order to add business logic to the endpoint."),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"requiresAuth()")," function can be overridden to determine if the endpoint requires a ",(0,r.kt)("inlineCode",{parentName:"p"},"SESSION_AUTH_TOKEN")," with the request, such as those made from authenticated sessions. Without a definition, this returns a default value of ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),". In the example above, this Authorisation is not required when the system is running in ",(0,r.kt)("inlineCode",{parentName:"p"},"TEST_MODE"),", which is useful for testing these endpoints with integration tests."))}f.isMDXComponent=!0}}]);