"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[25566],{19878:function(e){e.exports=JSON.parse('{"label":"data types","permalink":"/next/tags/data-types","allTagsPath":"/next/tags","count":6,"items":[{"id":"database/data-types/data-types","title":"Data types","description":"The following objects and classes encapsulate your data within your Genesis application, so that you can process it and add value as you see fit.","permalink":"/next/database/data-types/data-types"},{"id":"database/data-types/dbentity","title":"Data types - DbEntity","description":"DbEntity is the common interface implemented by table entities and view entities.","permalink":"/next/database/data-types/dbentity"},{"id":"database/data-types/dbrecord","title":"Data types - DbRecord","description":"Using\xa0DbRecord\xa0instead of\xa0entities will circumvent compile-time validation of database interactions. This means that errors might not appear until runtime or might lead to unexpected results.","permalink":"/next/database/data-types/dbrecord"},{"id":"database/data-types/index-entities","title":"Data types - Index entities","description":"Index entities are nested in\xa0table\xa0and\xa0view entities. The name will be based on the index name. The entity can be constructed by passing in the field values in order. The first field of the index must always be provided, and the others are optional.","permalink":"/next/database/data-types/index-entities"},{"id":"database/data-types/table-entities","title":"Data types - Table entities","description":"Table entities are classes generated by Genesis that match your applications\'s\xa0data model. The generated entity name is based on the table name, but will be camel case.","permalink":"/next/database/data-types/table-entities"},{"id":"database/data-types/views-entities","title":"Data types - Views entities","description":"View entities are classes generated by Genesis that match your application\'s\xa0data model. The name of the view entity that is generated will be the name specified in its definition, but it is converted from snake case to camel case; for example,\xa0VIEW_NAME\xa0becomes\xa0ViewName. All table/view entities implement a common interface called\xa0DbEntity.","permalink":"/next/database/data-types/views-entities"}]}')}}]);