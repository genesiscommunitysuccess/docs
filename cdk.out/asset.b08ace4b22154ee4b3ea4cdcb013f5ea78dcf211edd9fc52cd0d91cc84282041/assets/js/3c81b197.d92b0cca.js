"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[79589],{4408:function(e,t,a){a.r(t),a.d(t,{assets:function(){return o},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return b}});var r=a(87462),n=a(63366),s=(a(67294),a(3905)),i=(a(61839),["components"]),d={title:"Database interface - Generated repositories",sidebar_label:"Generated repositories",id:"generated-repositories",keywords:["database","database interface","generated","repositories"],tags:["database","database interface","generated","repositories"]},l=void 0,p={unversionedId:"database/database-interface/generated-repositories",id:"database/database-interface/generated-repositories",title:"Database interface - Generated repositories",description:"Introduction  | EntityDb |  Generated repositories | RxDb",source:"@site/docs/02_database/05_database-interface/02_generated-repositories.md",sourceDirName:"02_database/05_database-interface",slug:"/database/database-interface/generated-repositories",permalink:"/next/database/database-interface/generated-repositories",draft:!1,tags:[{label:"database",permalink:"/next/tags/database"},{label:"database interface",permalink:"/next/tags/database-interface"},{label:"generated",permalink:"/next/tags/generated"},{label:"repositories",permalink:"/next/tags/repositories"}],version:"current",sidebarPosition:2,frontMatter:{title:"Database interface - Generated repositories",sidebar_label:"Generated repositories",id:"generated-repositories",keywords:["database","database interface","generated","repositories"],tags:["database","database interface","generated","repositories"]},sidebar:"databaseSidebar",previous:{title:"Entity Db",permalink:"/next/database/database-interface/entity-db"},next:{title:"RxDb",permalink:"/next/database/database-interface/rxdb"}},o={},b=[],m={toc:b};function k(e){var t=e.components,a=(0,n.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/database/database-interface/database-interface/"},"Introduction"),"  | ",(0,s.kt)("a",{parentName:"p",href:"/database/database-interface/entity-db/"},"EntityDb")," |  ",(0,s.kt)("a",{parentName:"p",href:"/database/database-interface/generated-repositories/"},"Generated repositories")," | ",(0,s.kt)("a",{parentName:"p",href:"/database/database-interface/rxdb/"},"RxDb")," "),(0,s.kt)("p",null,"During the code generation phase, repository classes are generated for every table and view in the system. These repositories provide a type-safe way of accessing the database."),(0,s.kt)("p",null,"The main differences between the generated repositories and the\xa0",(0,s.kt)("a",{parentName:"p",href:"/database/database-interface/entity-db/"},"Entity Db"),"\xa0are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The entity db can handle any database entity, each repository can only handle a single entity."),(0,s.kt)("li",{parentName:"ul"},"The generated repositories have specific methods for every index of table/view, whereas the entity db is fully generic.")),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"th",href:"/database/database-interface/generated-repositories/"},"Generated Repositories")))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/data-types/table-entities/"},"Supports tables")),(0,s.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/data-types/views-entities/"},"Supports views")),(0,s.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Supports any data type"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Class to import"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"[TableName]AsyncRepository")," \\ ",(0,s.kt)("inlineCode",{parentName:"td"},"[TableName]Rx3Repository"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Type-safe read and write"),(0,s.kt)("td",{parentName:"tr",align:null},"\u2714\ufe0f")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Type-safe write result"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Returns data as"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/data-types/table-entities/"},"table"),"\xa0or\xa0",(0,s.kt)("a",{parentName:"td",href:"/database/data-types/views-entities/"},"view"),"\xa0entities")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Writes data as"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/data-types/table-entities/"},"table"),"\xa0or\xa0",(0,s.kt)("a",{parentName:"td",href:"/database/data-types/views-entities/"},"view"),"\xa0entities")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"References indexes as"),(0,s.kt)("td",{parentName:"tr",align:null},"Generated methods")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Programming interface"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/types-of-api/async/"},"Async"),"\xa0or\xa0",(0,s.kt)("a",{parentName:"td",href:"/database/types-of-api/rxjava/"},"RxJava"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Write (input)"),(0,s.kt)("td",{parentName:"tr",align:null},"Generated")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Write (output)"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/helper-classes/write-result/#write-result"},"Write Result"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Subscribe"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/helper-classes/subscription/record-update/#write-result"},"Record Update"),"\xa0of entity")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Bulk or Range Subscribe"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/database/helper-classes/subscription/bulk/"},"Bulk"),"\xa0of entity")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Available in\xa0",(0,s.kt)("a",{parentName:"td",href:"/server/event-handler/introduction/"},"Event Handlers"),"\xa0"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Available in\xa0",(0,s.kt)("a",{parentName:"td",href:"/server/request-server/advanced/#custom-request-servers"},"custom Request Servers"),"\xa0"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")))),(0,s.kt)("p",null,"With generated repositories, there are two flavours of the entity db:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"One has a ",(0,s.kt)("a",{parentName:"p",href:"/database/types-of-api/rxjava/"},"RxJava API")," signatures, for use from Java")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"The other flavour has an ",(0,s.kt)("a",{parentName:"p",href:"/database/types-of-api/async/"},"Async API")," signatures, for use from Kotlin."))),(0,s.kt)("p",null,"If you have a table called ",(0,s.kt)("strong",{parentName:"p"},"POSITION")," and two repositories called ",(0,s.kt)("strong",{parentName:"p"},"PositionRx3Repository")," and ",(0,s.kt)("strong",{parentName:"p"},"PositionAsyncRepository")," will be generated as part of ",(0,s.kt)("a",{parentName:"p",href:"/database/fields-tables-views/genesisDao/"},"generateDao")," task\nYou can perform CRUD operations on Table/View by its primary key and indices"))}k.isMDXComponent=!0}}]);