"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[87967],{32765:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return c}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),s=(a(61839),["components"]),l={title:"Subscription - Record update",sidebar_label:"Record update",id:"record-update",keywords:["database","helper classes","subscription","overview"],tags:["database","helper classes","subscription","overview"]},d=void 0,o={unversionedId:"database/helper-classes/subscription/record-update",id:"database/helper-classes/subscription/record-update",title:"Subscription - Record update",description:"Generic record update",source:"@site/docs/02_database/06_helper-classes/02_subscription/02_record-update.md",sourceDirName:"02_database/06_helper-classes/02_subscription",slug:"/database/helper-classes/subscription/record-update",permalink:"/next/database/helper-classes/subscription/record-update",draft:!1,tags:[{label:"database",permalink:"/next/tags/database"},{label:"helper classes",permalink:"/next/tags/helper-classes"},{label:"subscription",permalink:"/next/tags/subscription"},{label:"overview",permalink:"/next/tags/overview"}],version:"current",sidebarPosition:2,frontMatter:{title:"Subscription - Record update",sidebar_label:"Record update",id:"record-update",keywords:["database","helper classes","subscription","overview"],tags:["database","helper classes","subscription","overview"]},sidebar:"databaseSidebar",previous:{title:"Overview",permalink:"/next/database/helper-classes/subscription/overview"},next:{title:"Bulk",permalink:"/next/database/helper-classes/subscription/bulk"}},p={},c=[{value:"Generic record update",id:"generic-record-update",level:2}],u={toc:c};function b(e){var t=e.components,a=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"generic-record-update"},"Generic record update"),(0,i.kt)("p",null,"Generic records provide a generic way of publishing updates by the database. All updates have the same super type,\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"GenericRecordUpdate"),", which is a\xa0",(0,i.kt)("a",{parentName:"p",href:"https://kotlinlang.org/docs/sealed-classes.html"},"sealed Kotlin class"),". This means that all instances are guaranteed to be one of the implementation types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenericRecordUpdate.Insert")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenericRecordUpdate.Delete")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenericRecordUpdate.Modify"))),(0,i.kt)("p",null,"All these types have the following properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tableName"),":\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"String")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"recordId"),":\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"Long")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timestamp"),":\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"Long")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"emitter"),":\xa0",(0,i.kt)("inlineCode",{parentName:"li"},"String?"))),(0,i.kt)("p",null,"Additionally,\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"GenericRecordUpdate.Insert"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"GenericRecordUpdate.Delete"),"\xa0also have a\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"record"),"\xa0field. Whereas\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"GenericRecordUpdate.Modify"),"\xa0has an\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"oldRecord"),"\xa0and a\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"newRecord"),"\xa0field."))}b.isMDXComponent=!0}}]);