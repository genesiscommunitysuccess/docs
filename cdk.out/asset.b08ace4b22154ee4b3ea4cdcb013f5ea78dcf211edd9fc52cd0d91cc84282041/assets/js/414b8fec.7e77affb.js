"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[22286],{58242:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return f}});var i=a(87462),n=a(63366),s=(a(67294),a(3905)),d=(a(61839),["components"]),l={title:"Data model - Inside a fields dictionary",sidebar_label:"Inside a fields dictionary",id:"inside-a-fields-dictionary",keywords:["getting started","basics","data","model","fields dictionary"],tags:["getting started","basics","data model","fields dictionary"]},r=void 0,o={unversionedId:"getting-started/learn-the-basics/data-model/inside-a-fields-dictionary",id:"getting-started/learn-the-basics/data-model/inside-a-fields-dictionary",title:"Data model - Inside a fields dictionary",description:"The fields dictionary is where you specify all the fields you need for your data model.",source:"@site/docs/01_getting-started/01_learn-the-basics/05_data-model/01_inside-a-fields-dictionary copy.md",sourceDirName:"01_getting-started/01_learn-the-basics/05_data-model",slug:"/getting-started/learn-the-basics/data-model/inside-a-fields-dictionary",permalink:"/next/getting-started/learn-the-basics/data-model/inside-a-fields-dictionary",draft:!1,tags:[{label:"getting started",permalink:"/next/tags/getting-started"},{label:"basics",permalink:"/next/tags/basics"},{label:"data model",permalink:"/next/tags/data-model"},{label:"fields dictionary",permalink:"/next/tags/fields-dictionary"}],version:"current",sidebarPosition:1,frontMatter:{title:"Data model - Inside a fields dictionary",sidebar_label:"Inside a fields dictionary",id:"inside-a-fields-dictionary",keywords:["getting started","basics","data","model","fields dictionary"],tags:["getting started","basics","data model","fields dictionary"]},sidebar:"learningSidebar",previous:{title:"The data model",permalink:"/next/getting-started/learn-the-basics/data-model/"},next:{title:"Inside a tables dictionary",permalink:"/next/getting-started/learn-the-basics/data-model/inside-a-tables-dictionary"}},c={},f=[],u={toc:f};function p(e){var t=e.components,a=(0,n.Z)(e,d);return(0,s.kt)("wrapper",(0,i.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The fields dictionary is where you specify all the fields you need for your data model."),(0,s.kt)("p",null,"This is all contained in a single Kotlin script file. If your application is called bravo, then the file would be called ",(0,s.kt)("strong",{parentName:"p"},"bravo-fields-dictionary.kts"),"."),(0,s.kt)("p",null,"Within the file, you simply need to specify all the fields that you need - name and type. Here is a short and very simple example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'fields {\n    field(name = "ORDER_ID", type = STRING)\n    field(name = "DESCRIPTION", type = STRING, nullable = true)\n    field(name = "PRICE", type = DOUBLE, nullable = false)\n}\n')),(0,s.kt)("p",null,"OK, you have probably spotted that two of the fields here also have specifications for ",(0,s.kt)("inlineCode",{parentName:"p"},"nullable"),". There are other options that can be specified, but you already know the key information on this."),(0,s.kt)("p",null,"One more useful item here is that there is a useful Gradle menu on the right of your IntelliJ screen. After you have finished defining all your fields, you can run the following script:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"genesis-generated-fields")),(0,s.kt)("p",null,"This creates database objects, so that all the fields are available for text completion when you define your tables and views."))}p.isMDXComponent=!0}}]);