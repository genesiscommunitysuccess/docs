"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[45763],{85162:function(e,t,n){n.d(t,{Z:function(){return r}});var s=n(67294),i=n(86010),a="tabItem_Ymn6";function r(e){var t=e.children,n=e.hidden,r=e.className;return s.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,r),hidden:n},t)}},65488:function(e,t,n){n.d(t,{Z:function(){return m}});var s=n(87462),i=n(67294),a=n(86010),r=n(72389),o=n(67392),l=n(7094),u=n(12466),p="tabList__CuJ",c="tabItem_LNqP";function d(e){var t,n,r=e.lazy,d=e.block,m=e.defaultValue,g=e.values,v=e.groupId,f=e.className,h=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=g?g:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,o.l)(k,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var T=null===m?m:null!=(t=null!=m?m:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:h[0].props.value;if(null!==T&&!k.some((function(e){return e.value===T})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+T+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,l.U)(),w=y.tabGroupChoices,N=y.setTabGroupChoices,E=(0,i.useState)(T),_=E[0],I=E[1],S=[],C=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=v){var H=w[v];null!=H&&H!==_&&k.some((function(e){return e.value===H}))&&I(H)}var x=function(e){var t=e.currentTarget,n=S.indexOf(t),s=k[n].value;s!==_&&(C(t),I(s),null!=v&&N(v,String(s)))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var s,i=S.indexOf(e.currentTarget)+1;n=null!=(s=S[i])?s:S[0];break;case"ArrowLeft":var a,r=S.indexOf(e.currentTarget)-1;n=null!=(a=S[r])?a:S[S.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,a.Z)("tabs-container",p)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":d},f)},k.map((function(e){var t=e.value,n=e.label,r=e.attributes;return i.createElement("li",(0,s.Z)({role:"tab",tabIndex:_===t?0:-1,"aria-selected":_===t,key:t,ref:function(e){return S.push(e)},onKeyDown:A,onFocus:x,onClick:x},r,{className:(0,a.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":_===t})}),null!=n?n:t)}))),r?(0,i.cloneElement)(h.filter((function(e){return e.props.value===_}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==_})}))))}function m(e){var t=(0,r.Z)();return i.createElement(d,(0,s.Z)({key:String(t)},e))}},6400:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var s=n(87462),i=n(63366),a=(n(67294),n(3905)),r=(n(61839),n(65488)),o=n(85162),l=["components"],u={title:"Custom Endpoints - Testing",sidebar_label:"Testing",id:"testing",keywords:["server","integration","custom endpoints","testing"],tags:["server","integration","custom endpoints","testing"]},p=void 0,c={unversionedId:"server/integration/custom-endpoints/testing",id:"version-2022.3/server/integration/custom-endpoints/testing",title:"Custom Endpoints - Testing",description:"Introduction | Basics |  Advanced | Examples | Configuring runtime | Testing",source:"@site/versioned_docs/version-2022.3/03_server/10_integration/07_custom-endpoints/06_testing.md",sourceDirName:"03_server/10_integration/07_custom-endpoints",slug:"/server/integration/custom-endpoints/testing",permalink:"/server/integration/custom-endpoints/testing",draft:!1,tags:[{label:"server",permalink:"/tags/server"},{label:"integration",permalink:"/tags/integration"},{label:"custom endpoints",permalink:"/tags/custom-endpoints"},{label:"testing",permalink:"/tags/testing"}],version:"2022.3",sidebarPosition:6,frontMatter:{title:"Custom Endpoints - Testing",sidebar_label:"Testing",id:"testing",keywords:["server","integration","custom endpoints","testing"],tags:["server","integration","custom endpoints","testing"]},sidebar:"serverModulesSidebar",previous:{title:"Configuring Runtime",permalink:"/server/integration/custom-endpoints/configuring-runtime"},next:{title:"Introduction",permalink:"/server/integration/data-pipeline/introduction"}},d={},m=[{value:"Integration testing",id:"integration-testing",level:2},{value:"Manual testing",id:"manual-testing",level:2},{value:"Testing with an API client",id:"testing-with-an-api-client",level:3}],g={toc:m};function v(e){var t=e.components,u=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,s.Z)({},g,u,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/introduction/"},"Introduction")," | ",(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/basics/"},"Basics")," |  ",(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/advanced/"},"Advanced")," | ",(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/examples/"},"Examples")," | ",(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/configuring-runtime/"},"Configuring runtime")," | ",(0,a.kt)("a",{parentName:"p",href:"/server/integration/custom-endpoints/testing/"},"Testing")),(0,a.kt)("h2",{id:"integration-testing"},"Integration testing"),(0,a.kt)("p",null,"To create integration tests for your custom endpoints, you need to create service tests by extending the ",(0,a.kt)("inlineCode",{parentName:"p"},"AbstractGenesisTestSupport")," class and specifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"genesis-router.kts")," as the Script File Name. Provide the package names of genesis-router and the endpoint. Examples of how you would initialise a test extending this class are provided below."),(0,a.kt)(r.Z,{defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'class TestEndpoint : AbstractGenesisTestSupport<GenesisSet>(\n    GenesisTestConfig {\n        packageNames = mutableListOf("global.genesis.router", "alpha.custom.endpoint")\n        genesisHome = "/genesisHome"\n        scriptFileName = "genesis-router.kts"\n        parser = { it }\n    }\n) {\n    override fun createDictionary(): GenesisDictionary = testDictionary()}\n\n    @Test\n    fun testRouterEndPoint() {\n        val client = HttpClient.newHttpClient()\n        val request = HttpRequest\n            .newBuilder(URI("http://localhost:9064/file-handler/upload")) //the second package name should refer to the package of your custom endpoints\n            .version(HttpClient.Version.HTTP_1_1)\n            .POST(HttpRequest.BodyPublishers.ofString("TEXT"))\n            .build()\n        val response = client.send(request, HttpResponse.BodyHandlers.ofString())\n        Assert.assertEquals("{ \\"Result\\": \\"Successful upload\\"}", response.body())\n    }\n'))),(0,a.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class TestEndpoint extends AbstractGenesisTestSupport<GenesisSet> {\n    public TestEndpoint () {\n        super(GenesisTestConfig.builder()\n            .setPackageNames(List.of("global.genesis.router", "org.file.processor")) //the second package name should refer to the package of your custom endpoints\n            .setGenesisHome("/genesisHome")\n            .setScriptFileName("genesis-router.kts")\n            .setParser(e -> e)\n            .build());\n    }\n\n    @Test\n    public void testRouterEndpoint() throws URISyntaxException, IOException, InterruptedException {\n        var client = HttpClient.newHttpClient();\n        var request = HttpRequest\n                .newBuilder(new URI("http://localhost:9064/file-handler/upload")) //This localhost, using the webPort specified in genesis-router.kts, and then the registered endpoint name\n                .version(HttpClient.Version.HTTP_1_1)\n                .POST(HttpRequest.BodyPublishers.ofString("TEXT"))\n                .build();\n\n        var response = client.send(request, HttpResponse.BodyHandlers.ofString());\n        assertEquals("{ \\"Result\\": \\"Successful upload\\"}", response.body());\n    }\n}\n')))),(0,a.kt)("h2",{id:"manual-testing"},"Manual testing"),(0,a.kt)("h3",{id:"testing-with-an-api-client"},"Testing with an API client"),(0,a.kt)("p",null,"An API client is a useful way of testing components. As a client, it is effectively a front end seeking information from the server.\nYou can test these endpoints on ",(0,a.kt)("a",{parentName:"p",href:"https://www.postman.com/downloads/"},"Postman App"),"/",(0,a.kt)("a",{parentName:"p",href:"https://insomnia.rest/download"},"Insomnia App"),"."),(0,a.kt)("p",null,"Before you can make any calls custom endpoints, you have to permission yourself by obtaining a SESSION_AUTH_TOKEN. The details of how to do this are on our separate ",(0,a.kt)("a",{parentName:"p",href:"/operations/testing/component-testing/#using-an-api-client"},"Testing")," page."),(0,a.kt)("p",null,"Once you have the SESSION_AUTH_TOKEN, keep a copy that you can paste into each request as you make your test call."),(0,a.kt)("p",null,"In the example below, we use Insomnia as the API client."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(86648).Z,width:"902",height:"398"})),(0,a.kt)("p",null,"In the header, you need to supply:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"a SOURCE_REF (always), which identifies you; you can use any string value that suits you"),(0,a.kt)("li",{parentName:"ul"},"the SESSION_AUTH_TOKEN that permissions you to access the server")),(0,a.kt)("p",null,"The url consists of: "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the address or hostname of the server"),(0,a.kt)("li",{parentName:"ul"},"custom-endpoint name")))}v.isMDXComponent=!0},86648:function(e,t,n){t.Z=n.p+"assets/images/custom-endpoint-test-2a3dd0034972eb47159e31fc060d1837.png"}}]);