"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[27717],{12026:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return v},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return c}});var r=n(87462),s=n(63366),i=(n(67294),n(3905)),a=n(61839),o=["components"],u={title:"Request Server - Introduction",sidebar_label:"Request Server",id:"introduction",keywords:["server","request server","introduction"],tags:["server","request server","introduction"]},l=void 0,p={unversionedId:"server/request-server/introduction",id:"server/request-server/introduction",title:"Request Server - Introduction",description:"Request Servers, (otherwise known as request/replies and often shortened to reqrep) retrieve a snapshot of data from a table or a view on demand and serve it up to the requesting client. They are predominantly used for serving the UI.",source:"@site/docs/03_server/03_request-server/01_introduction.md",sourceDirName:"03_server/03_request-server",slug:"/server/request-server/introduction",permalink:"/next/server/request-server/introduction",draft:!1,tags:[{label:"server",permalink:"/next/tags/server"},{label:"request server",permalink:"/next/tags/request-server"},{label:"introduction",permalink:"/next/tags/introduction"}],version:"current",sidebarPosition:1,frontMatter:{title:"Request Server - Introduction",sidebar_label:"Request Server",id:"introduction",keywords:["server","request server","introduction"],tags:["server","request server","introduction"]},sidebar:"serverModulesSidebar",previous:{title:"Testing",permalink:"/next/server/data-server/testing"},next:{title:"Basics",permalink:"/next/server/request-server/basics"}},d={},c=[{value:"Introduction",id:"introduction",level:2}],m={toc:c};function v(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Request Servers, (otherwise known as request/replies and often shortened to reqrep) retrieve a snapshot of data from a table or a view on demand and serve it up to the requesting client. They are predominantly used for serving the UI."),(0,i.kt)("p",null,"Request Servers will reply with a single response. Once the response is received, the transaction is over (unlike a ",(0,i.kt)("a",{parentName:"p",href:"/server/data-server/basics"},"Data Server"),", which stays connected to the client and pushes updates)."),(0,i.kt)(a.G,{chart:"graph TD\nA[UI] --\x3e |Connection| B(REQUEST_SERVER)\nB --\x3e|Set Response| A\nB --\x3e|Request| C[Database]\nC --\x3e |Response|B",mdxType:"Mermaid"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Request Servers have other features distinct from a Data Server, such as allowing one-to-many joins, and even completely custom request servers for serving up non-linear data (e.g. sets of disjointed data to serve up to a report)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'  requestReply("TRADE", TRADE_VIEW) {\n    permissioning {\n      permissionCodes = listOf("TRADER", "SUPPORT")\n      auth(mapName = "ENTITY_VISIBILITY") {\n        TRADE_VIEW.COUNTERPARTY_ID\n      }\n    }\n  }\n')),(0,i.kt)("p",null,"Request Servers are conventionally configured in the file ",(0,i.kt)("em",{parentName:"p"},"application-name"),(0,i.kt)("strong",{parentName:"p"},"-reqrep.kts"),". This file should be in the ",(0,i.kt)("em",{parentName:"p"},"application-name"),"-script-config module."),(0,i.kt)("p",null,"So, if your application is called ",(0,i.kt)("strong",{parentName:"p"},"positions"),", the file would be named ",(0,i.kt)("strong",{parentName:"p"},"positions-reqrep.kts"),"."),(0,i.kt)("p",null,"You should also check the Request Server component in your application's system-processes and service-definition files, as described in the ",(0,i.kt)("a",{parentName:"p",href:"/server/request-server/configuring-runtime"},"Configuring runtime")," page."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The following examples in this section assume you have the following fields and tables present:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'    field(name = "INSTRUMENT_ID", type = STRING)\n    field(name = "INSTRUMENT_CODE", type = STRING)\n    field(name = "INSTRUMENT_NAME", type = STRING)\n    field(name = "VWAP", type = STRING)\n    field(name = "LAST_TRADED_PRICE", type = DOUBLE)\n    field(name = "TRADED_CURRENCY", type = STRING)\n    field(name = "EXCHANGE_ID", type = STRING)\n    field(name = "SPREAD", type = DOUBLE)\n    field(name = "ALTERNATE_TYPE", type = STRING)\n')),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'    table (name = "INSTRUMENT_DETAILS", id = 11005) {\n        INSTRUMENT_CODE\n        INSTRUMENT_ID\n        INSTRUMENT_NAME\n        LAST_TRADED_PRICE\n        VWAP\n        SPREAD\n        TRADED_CURRENCY\n        EXCHANGE_ID\n        ALTERNATE_TYPE\n        primaryKey {\n            INSTRUMENT_ID\n        }\n    }\n'))))}v.isMDXComponent=!0}}]);