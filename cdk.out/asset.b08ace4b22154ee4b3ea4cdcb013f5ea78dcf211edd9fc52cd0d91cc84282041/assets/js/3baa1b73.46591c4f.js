"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[80408],{96356:function(e){e.exports=JSON.parse('{"label":"postgres data pipeline","permalink":"/tags/postgres-data-pipeline","allTagsPath":"/tags","count":5,"items":[{"id":"version-2022.3/getting-started/use-cases/postgres-data-pipeline/conclusion","title":"Postgres data pipeline - Conclusion","description":"In this tutorial you saw how to integrate with an external PostgreSQL server using the Genesis Data Pipeline configuration.","permalink":"/getting-started/use-cases/postgres-data-pipeline/conclusion"},{"id":"version-2022.3/getting-started/use-cases/postgres-data-pipeline/dictionary","title":"Postgres data pipeline - Create Genesis Dictionary","description":"Create new Genesis project","permalink":"/getting-started/use-cases/postgres-data-pipeline/dictionary"},{"id":"version-2022.3/getting-started/use-cases/postgres-data-pipeline/mappers","title":"Postgres data pipeline - Declare Source and Mappers","description":"In this part of the tutorial we will declare the PostgreSQL server as a data source and map the incoming rows to a Genesis Table object.","permalink":"/getting-started/use-cases/postgres-data-pipeline/mappers"},{"id":"version-2022.3/getting-started/use-cases/postgres-data-pipeline/deploy","title":"Postgres data pipeline - Deploy the Application","description":"To deploy your application to your local Linux or WSL environment, see this guide.","permalink":"/getting-started/use-cases/postgres-data-pipeline/deploy"},{"id":"version-2022.3/getting-started/use-cases/postgres-data-pipeline/source-data","title":"Postgres data pipeline - Prepare the Source Data","description":"The source data comes from a PostgreSQL server that has to meet the minimal configuration mentioned here.","permalink":"/getting-started/use-cases/postgres-data-pipeline/source-data"}]}')}}]);