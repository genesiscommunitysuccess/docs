"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[8250],{90972:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return r},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var s=n(87462),i=n(63366),o=(n(67294),n(3905)),a=(n(61839),["components"]),l={title:"Customisation (general)",sidebar_label:"Customisation (general)",id:"customisation-general",keywords:["web","design system","customisation"],tags:["web","design system","customisation"]},r=void 0,u={unversionedId:"web/design-systems/customisation-general",id:"version-2022.3/web/design-systems/customisation-general",title:"Customisation (general)",description:"Our design systems and components are highly configurable. Let's have a look at how you can take advantage.",source:"@site/versioned_docs/version-2022.3/04_web/03_design-systems/02_customisation-general.md",sourceDirName:"04_web/03_design-systems",slug:"/web/design-systems/customisation-general",permalink:"/web/design-systems/customisation-general",draft:!1,tags:[{label:"web",permalink:"/tags/web"},{label:"design system",permalink:"/tags/design-system"},{label:"customisation",permalink:"/tags/customisation"}],version:"2022.3",sidebarPosition:2,frontMatter:{title:"Customisation (general)",sidebar_label:"Customisation (general)",id:"customisation-general",keywords:["web","design system","customisation"],tags:["web","design system","customisation"]},sidebar:"frontendSidebar",previous:{title:"Introduction",permalink:"/web/design-systems/introduction"},next:{title:"Preview",permalink:"/web/design-systems/preview"}},m={},p=[{value:"Configuring defaults",id:"configuring-defaults",level:3},{value:"Overriding default implementation",id:"overriding-default-implementation",level:3}],c={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Our design systems and components are highly configurable. Let's have a look at how you can take advantage."),(0,o.kt)("p",null,"Design system can be shared across multiple applications. When performing customisations, you can control the scope as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"General - applied to the design system itself, affecting all applications that use the system. This is described below."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/web/design-systems/customisation-app-specific/"},"Application-specific")," - this is only applied to a single application. Other applications using the same system are not affected.")),(0,o.kt)("h3",{id:"configuring-defaults"},"Configuring defaults"),(0,o.kt)("p",null,"The starting point for making general customisations is the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/_config")," folder:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"alpha-design-system\n\u251c\u2500\u2500 dist\n\u251c\u2500\u2500 node_modules\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 _config\n\u2502   \u2502   \u251c\u2500\u2500 styles\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 colors.ts\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2502   \u251c\u2500\u2500 tokens\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 custom.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 default.ts\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2502   \u251c\u2500\u2500 values\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 color.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 index.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 misc.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 sizing.ts\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 typography.ts\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n")),(0,o.kt)("p",null,"It contains configuration files that set default values for various design tokens, as well as a few other settings."),(0,o.kt)("p",null,"You can achieve major visual changes simply by modifying token defaults. There are several categories of token available:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/web/design-systems/tokens/colour/"},"Colour"),": base colours, dark/light mode, colour variants for interactive states (hover etc.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/web/design-systems/tokens/typography/"},"Typography"),": default font family, font size and line height hierarchy"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/web/design-systems/tokens/sizing/"},"Sizing"),": component sizing, spacing and border style"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/web/design-systems/tokens/miscellaneous/"},"Miscellaneous"),": other configuration options, such as the naming prefix (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"alpha"),")")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To help you visualise how modifying tokens impacts the component look and feel, we have created a ",(0,o.kt)("a",{parentName:"p",href:"/web/design-systems/preview/"},"live configuration preview"),".")),(0,o.kt)("h3",{id:"overriding-default-implementation"},"Overriding default implementation"),(0,o.kt)("p",null,"To go beyond adjusting token values, you can override the default component implementation. You can choose only to  override certain aspects of a component (such as template, styles or shadom DOM options) or provide a completely custom implementation."),(0,o.kt)("p",null,"By default, components in your design simply re-export components from the underlying foundation design system as is (exact code can vary):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {foundationButton} from '@genesislcap/foundation-ui';\n\nexport const alphaButton = () => foundationButton();\n")),(0,o.kt)("p",null,"Instead of re-exporting the default, you can provide your own custom implementation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {css, FoundationElement, FoundationElementDefinition, html} from '@genesislcap/foundation-ui';\n\nexport const styles = css`\n/* CSS  */\n`;\n\nexport const template = html<AlphaButton>`\n/* Template */\n`;\n\ninterface ButtonDefinition extends FoundationElementDefinition {\n  /* Any properties */\n}\n\nexport class Button extends FoundationElement {\n  /* Any custom logic */\n}\n\nexport const alphaButton = Button.compose<ButtonDefinition>({\n  baseName: 'button',\n  template,\n  styles\n});\n")))}d.isMDXComponent=!0}}]);