"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[47921],{54431:function(e,n,i){i.r(n),i.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return u}});var o=i(87462),t=i(63366),r=(i(67294),i(3905)),s=(i(61839),["components"]),a={title:"Genesis containerisation - using your own Dockerfile",sidebar_label:"Use your own Dockerfile",id:"dockerfile",keywords:["operations","containerisation","container","docker","dockerfile"],tags:["operations","containerisation","container","docker","dockerfile"]},c=void 0,p={unversionedId:"operations/containerisation/dockerfile",id:"operations/containerisation/dockerfile",title:"Genesis containerisation - using your own Dockerfile",description:"If you want more control over the image, you can create your own Dockerfile, which gives you complete control over the base image and the versions of the underlying dependencies.",source:"@site/docs/05_operations/04_containerisation/04_dockerfile.md",sourceDirName:"05_operations/04_containerisation",slug:"/operations/containerisation/dockerfile",permalink:"/next/operations/containerisation/dockerfile",draft:!1,tags:[{label:"operations",permalink:"/next/tags/operations"},{label:"containerisation",permalink:"/next/tags/containerisation"},{label:"container",permalink:"/next/tags/container"},{label:"docker",permalink:"/next/tags/docker"},{label:"dockerfile",permalink:"/next/tags/dockerfile"}],version:"current",sidebarPosition:4,frontMatter:{title:"Genesis containerisation - using your own Dockerfile",sidebar_label:"Use your own Dockerfile",id:"dockerfile",keywords:["operations","containerisation","container","docker","dockerfile"],tags:["operations","containerisation","container","docker","dockerfile"]},sidebar:"operationsSidebar",previous:{title:"Run a container",permalink:"/next/operations/containerisation/run"},next:{title:"Pushing your image",permalink:"/next/operations/containerisation/pushing"}},l={},u=[],d={toc:u};function f(e){var n=e.components,i=(0,t.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"If you want more control over the image, you can create your own Dockerfile, which gives you complete control over the base image and the versions of the underlying dependencies."),(0,r.kt)("p",null,"If you choose to create your own Dockerfile, there are quite a few configuration steps and dependencies that are required as part of the image build. Below is an example Dockerfile that is generated by our Gradle task:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-docker"},'FROM rockylinux:8\nRUN yum install -y unzip ncurses python3 java-17-openjdk-devel lmdb-libs openssl nginx procps\nRUN ln -s /usr/lib64/liblmdb.so.0.0.0  /usr/lib64/liblmdb.so\nRUN update-alternatives --set python /usr/bin/python3\nRUN mkdir -p /app/run/site-specific/cfg /app/web/console /etc/ssl/certs\nRUN openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout /etc/ssl/certs/certs.key -out /etc/ssl/certs/certs.pem -subj "/C=GB/L=London/O=Genesis Global/CN=localhost"\nWORKDIR /app\nCOPY nginx.conf /etc/nginx/nginx.conf\nRUN echo "export GENESIS_HOME=/app/run/" >> ~/.bashrc\nRUN echo "source \\$GENESIS_HOME/genesis/util/setup.sh" >> ~/.bashrc\nCOPY genesis-distribution-6.2.0-SNAPSHOT-bin.zip /app\nRUN unzip genesis-distribution-6.2.0-SNAPSHOT-bin.zip -d run/\nRUN rm -f genesis-distribution-6.2.0-SNAPSHOT-bin.zip\nCOPY auth-distribution-6.2.0-SNAPSHOT-bin.zip /app\nRUN unzip auth-distribution-6.2.0-SNAPSHOT-bin.zip -d run/\nRUN rm -f auth-distribution-6.2.0-SNAPSHOT-bin.zip\nCOPY log4j2-default.xml /app/run/site-specific/cfg/\nCOPY web-distribution.zip /app\nRUN unzip web-distribution.zip -d web/\nRUN rm -f web-distribution.zip\nCOPY position-site-specific-1.0.0-SNAPSHOT-bin.zip /app\nRUN unzip position-site-specific-1.0.0-SNAPSHOT-bin.zip -d run/\nRUN rm -f position-site-specific-1.0.0-SNAPSHOT-bin.zip\nCOPY genesisproduct-position-1.0.0-SNAPSHOT-bin.zip /app\nRUN unzip genesisproduct-position-1.0.0-SNAPSHOT-bin.zip -d run/\nRUN rm -f genesisproduct-position-1.0.0-SNAPSHOT-bin.zip\nRUN source ~/.bashrc && genesisInstall --ignoreHooks\nRUN source ~/.bashrc && preCompileScripts\nSHELL ["bash", "-c"]\nEXPOSE 8080\nEXPOSE 443\nCMD ["/app/run/genesis/util/dockerStartup.sh", "-p"]\n')),(0,r.kt)("p",null,"Note: If you are managing your own Dockerfile, you will need to also manage the locations of the dependencies for copying to the container."))}f.isMDXComponent=!0}}]);