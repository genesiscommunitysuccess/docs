"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[20797],{80090:function(e,t,s){s.r(t),s.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return g}});var n=s(87462),a=s(63366),r=(s(67294),s(3905)),o=(s(61839),["components"]),i={title:"Server Configuration - Processes",sidebar_label:"Processes",id:"processes",keywords:["server","configuration","processes"],tags:["server","configuration","processes"]},p=void 0,l={unversionedId:"server/configuring-runtime/processes",id:"server/configuring-runtime/processes",title:"Server Configuration - Processes",description:"Each application must have a -processes.xml file. This contains the configuration of each module (data server, request server and event-handler etc). It is generated automatically when you create a new Genesis project using  GenX CLI tool.",source:"@site/docs/03_server/01_configuring-runtime/03_processes.md",sourceDirName:"03_server/01_configuring-runtime",slug:"/server/configuring-runtime/processes",permalink:"/next/server/configuring-runtime/processes",draft:!1,tags:[{label:"server",permalink:"/next/tags/server"},{label:"configuration",permalink:"/next/tags/configuration"},{label:"processes",permalink:"/next/tags/processes"}],version:"current",sidebarPosition:3,frontMatter:{title:"Server Configuration - Processes",sidebar_label:"Processes",id:"processes",keywords:["server","configuration","processes"],tags:["server","configuration","processes"]},sidebar:"serverModulesSidebar",previous:{title:"System Definitions",permalink:"/next/server/configuring-runtime/system-definitions"},next:{title:"Service Definitions",permalink:"/next/server/configuring-runtime/service-definitions"}},c={},g=[{value:"Tags",id:"tags",level:2},{value:"dependency",id:"dependency",level:3},{value:"loggingLevel",id:"logginglevel",level:3},{value:"classpath",id:"classpath",level:3},{value:"start",id:"start",level:3},{value:"options",id:"options",level:3},{value:"package",id:"package",level:3},{value:"module",id:"module",level:3},{value:"config",id:"config",level:3},{value:"script",id:"script",level:3},{value:"language",id:"language",level:3},{value:"scheduleRestart",id:"schedulerestart",level:3},{value:"groupId",id:"groupid",level:3},{value:"description",id:"description",level:3},{value:"primaryOnly",id:"primaryonly",level:3},{value:"arguments",id:"arguments",level:3},{value:"configOverridesFile",id:"configoverridesfile",level:3}],u={toc:g};function d(e){var t=e.components,s=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Each application must have a ",(0,r.kt)("strong",{parentName:"p"},"-processes.xml")," file. This contains the configuration of each module (data server, request server and event-handler etc). It is generated automatically when you create a new Genesis project using  ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/quick-start/create-a-new-project/"},"GenX CLI tool"),"."),(0,r.kt)("p",null,"If you add new processes, you need to add their details to the ",(0,r.kt)("em",{parentName:"p"},"application"),(0,r.kt)("strong",{parentName:"p"},"-processes.xml")," file. See the section on ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/quick-start/prepare-the-server-and-build/"},"adding processes")," for more details on how to do this."),(0,r.kt)("p",null,"When you run the command ",(0,r.kt)("inlineCode",{parentName:"p"},"genesisInstall"),", the details of this file are aggregated along with details from internal Genesis files (for example, ",(0,r.kt)("strong",{parentName:"p"},"auth-processes.xml"),") into a single newly-generated ",(0,r.kt)("strong",{parentName:"p"},"processes.xml")," file in the ",(0,r.kt)("strong",{parentName:"p"},"generated")," folder."),(0,r.kt)("p",null,"Very important commands like ",(0,r.kt)("strong",{parentName:"p"},"startServer"),", ",(0,r.kt)("strong",{parentName:"p"},"killServer"),", ",(0,r.kt)("strong",{parentName:"p"},"startProcess")," and ",(0,r.kt)("strong",{parentName:"p"},"killProcess")," all refer to the generated file to check which processes they need to act on."),(0,r.kt)("p",null,"Here is an example of a generated processes.xml file for an application that has:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a data server"),(0,r.kt)("li",{parentName:"ul"},"a request server"),(0,r.kt)("li",{parentName:"ul"},"an event handler"),(0,r.kt)("li",{parentName:"ul"},"a consolidator"),(0,r.kt)("li",{parentName:"ul"},"a streamer and streamer-client")),(0,r.kt)("p",null,"You can see that this file has separate code blocks for each of the application's processes. Each code block has tags that define the characteristics of the process."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<processes>\n  <process name="POSITION_APP_DATASERVER">\n    <groupId>POSITION_APP</groupId>\n    <start>true</start>\n    <options>-Xmx256m</options>\n    <module>genesis-pal-dataserver</module>\n    <package>global.genesis.dataserver.pal</package>\n    <script>position_app-dataserver.kts<\/script>\n    <description>Displays real-time details</description>\n    <language>pal</language>\n    <classpath>quickfixj-core-*.jar</classpath>\n  </process>\n  <process name="POSITION_APP_REQUEST_SERVER">\n    <groupId>POSITION_APP</groupId>\n    <start>true</start>\n    <options>-Xmx256m</options>\n    <module>genesis-pal-requestserver</module>\n    <package>global.genesis.requestreply.pal</package>\n    <script>position_app-reqrep.kts<\/script>\n    <description>Server one-shot requests for details</description>\n    <language>pal</language>\n  </process>\n  <process name="POSITION_APP_EVENT_HANDLER">\n    <groupId>POSITION_APP</groupId>\n    <start>true</start>\n    <options>-Xmx256m -DRedirectStreamsToLog=true</options>\n    <module>genesis-pal-eventhandler</module>\n    <package>global.genesis.eventhandler.pal</package>\n    <script>position_app-eventhandler.kts<\/script>\n    <description>Handles events</description>\n    <classpath>position_app-messages*,position_app-eventhandler*</classpath>\n    <language>pal</language>\n  </process>\n  <process name="POSITION_APP_CONSOLIDATOR">\n      <groupId>POSITION_APP</groupId>\n      <start>true</start>\n      <options>-Xmx256m -DRedirectStreamsToLog=true  -DXSD_VALIDATE=false</options>\n      <module>consolidator2</module>\n      <package>global.genesis.consolidator2</package>\n      <config>position_app-consolidator2.xml</config>\n      <loggingLevel>INFO,DATADUMP_OFF</loggingLevel>\n      <dependency>POSITION_APP_EVENT_HANDLER</dependency>\n  </process>\n  <process name="POSITION_APP_STREAMER_CLIENT">\n      <start>true</start>\n      <options>-Xmx128m -DXSD_VALIDATE=false</options>\n      <module>genesis-pal-streamerclient</module>\n      <package>global.genesis.streamerclient.pal</package>\n      <script>position_app-streamer-client.kts<\/script>\n  </process>\n  <process name="POSITION_APP_STREAMER">\n      <start>true</start>\n      <options>-Xmx128m -DXSD_VALIDATE=false</options>\n      <module>genesis-pal-streamer</module>\n      <package>global.genesis.streamer.pal</package>\n      <script>position_app-streamer.kts<\/script>\n      <configOverridesFile>/home/genesis/appstreamer.properties</configOverridesFile>\n  </process>\n</processes>\n')),(0,r.kt)("h2",{id:"tags"},"Tags"),(0,r.kt)("p",null,"For each process, the tags define key information. Let's look at the tags that are available."),(0,r.kt)("h3",{id:"dependency"},"dependency"),(0,r.kt)("p",null,"This tag defines the processes that the current process is dependent on. In the above example, the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_CONSOLIDATOR")," process will only start once the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_EVENT_HANDLER")," process is running. "),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"logginglevel"},"loggingLevel"),(0,r.kt)("p",null,"This tag defines the default log level for the process, which is based on ",(0,r.kt)("a",{parentName:"p",href:"http://www.slf4j.org/"},"slf4j")," levels. It also accepts DATADUMP_ON/DATADUMP_OFF to explicitly declare that you would like to log all the received/sent network messages."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"classpath"},"classpath"),(0,r.kt)("p",null,"This tag defines additional jar files that might be needed by the microservices. The jar files declared in this section have to be comma-separated and need to exist within a ",(0,r.kt)("strong",{parentName:"p"},"lib")," or ",(0,r.kt)("strong",{parentName:"p"},"bin")," folder for any of the genesis products in the environment."),(0,r.kt)("p",null,"You can use wild cards in your specification. This can be seen in the ",(0,r.kt)("strong",{parentName:"p"},"classpath")," for the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_DATASERVER")," and ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_EVENT_HANDLER")," configuration in the example above."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"start"},"start"),(0,r.kt)("p",null,"This tag defines whether the process needs to be started when startServer command is executed and whether to show this process in the mon command display. Default value is true"),(0,r.kt)("h3",{id:"options"},"options"),(0,r.kt)("p",null,"This tag defines JVM arguments."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"package"},"package"),(0,r.kt)("p",null,"This tag defines which package the process should refer to. All Genesis source code is contained in packages. So, in the example above, the configuration for the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_STREAMER")," process points to the source code in the package ",(0,r.kt)("strong",{parentName:"p"},"global.genesis.streamer.pal"),".\nMultiple package scans needs to be comma-separated."),(0,r.kt)("h3",{id:"module"},"module"),(0,r.kt)("p",null,"This tag defines where in the package (see above) the process should look for its binaries - base jar files. In the above example, the configuration of the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_EVENT_HANDLER")," has a ",(0,r.kt)("strong",{parentName:"p"},"module")," tag that points to ",(0,r.kt)("strong",{parentName:"p"},"genesis-pal-eventhandler"),".  This finds every jar file with the text ",(0,r.kt)("strong",{parentName:"p"},"genesis-pal-eventhandler")," and gets all the relevant classpath dependencies."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is mandatory."),(0,r.kt)("h3",{id:"config"},"config"),(0,r.kt)("p",null,"This tag defines which config file the process should refer to."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is mandatory for some services."),(0,r.kt)("h3",{id:"script"},"script"),(0,r.kt)("p",null,"This tag defines which script file the process should refer to. "),(0,r.kt)("p",null,"When you are defining the process in its ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", if the process uses scripts, then you have to specify the script file using this tag. In the example above, the ",(0,r.kt)("strong",{parentName:"p"},"POSITION_APP_REQUEST_SERVER")," has a script tag identifying ",(0,r.kt)("strong",{parentName:"p"},"position_app-reqrep.kts"),", which is where the configuration of the Request Server exists. If you are not using scripts for the process, then this tag is not needed."),(0,r.kt)("h3",{id:"language"},"language"),(0,r.kt)("p",null,"This tag defines what language the script is using. The default value is Groovy. Accepted values are ","[","pal, groovy, R","]","."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is mandatory if you have specified a script file."),(0,r.kt)("h3",{id:"schedulerestart"},"scheduleRestart"),(0,r.kt)("p",null,"This tag requires a boolean value. It controls what the platform does if the process dies unexpectedly. If set to ",(0,r.kt)("strong",{parentName:"p"},"true"),"; the process will be restarted automatically. The default value is ",(0,r.kt)("strong",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"groupid"},"groupId"),(0,r.kt)("p",null,"Use this tag if you want to make the process part of a pre-defined group. You must specify the ",(0,r.kt)("strong",{parentName:"p"},"groupID")," of the group you have created. For example, the genesis process belongs to the GENESIS group. For any new application, the value for groupId will be ",(0,r.kt)("em",{parentName:"p"},"application name"),". The commands ",(0,r.kt)("strong",{parentName:"p"},"startGroup")," and ",(0,r.kt)("strong",{parentName:"p"},"killGroup")," use the ",(0,r.kt)("strong",{parentName:"p"},"groupId")," to start or kill groups of processes."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"description"},"description"),(0,r.kt)("p",null,"This tag provides a simple description of the process. "),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"primaryonly"},"primaryOnly"),(0,r.kt)("p",null,"This tag specifies that the process can only run on the primary node in a cluster. It requires a boolean value: ",(0,r.kt)("strong",{parentName:"p"},"true")," or ",(0,r.kt)("strong",{parentName:"p"},"false"),". The default value is false."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"arguments"},"arguments"),(0,r.kt)("p",null,"This tag helps in hard-coding the process arguments for starting the processes,  since some processes always need arguments on startup."),(0,r.kt)("p",null,"When you are defining the process in your application's ",(0,r.kt)("strong",{parentName:"p"},"process.xml"),", this tag is optional."),(0,r.kt)("h3",{id:"configoverridesfile"},"configOverridesFile"),(0,r.kt)("p",null,"This tag specifies another config file (properties format) that this process will read on startup.  The properties in\nthis file will override the system-definitions file."))}d.isMDXComponent=!0}}]);