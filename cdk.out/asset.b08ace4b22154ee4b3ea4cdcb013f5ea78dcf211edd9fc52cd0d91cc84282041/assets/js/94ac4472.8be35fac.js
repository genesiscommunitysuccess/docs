"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[2562],{37723:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var i=t(87462),o=t(63366),a=(t(67294),t(3905)),r=(t(61839),["components"]),l={title:"Micro-front-ends - Foundation Login",sidebar_label:"Foundation login",Id:"front-end-foundation-login",keywords:["web","login","foundation login","frontend","ui","micro-front-ends"],tags:["web","login","foundation login","frontend","ui","micro-front-ends"]},s="Foundation Login",u={unversionedId:"web/micro-front-ends/foundation-login",id:"web/micro-front-ends/foundation-login",title:"Micro-front-ends - Foundation Login",description:"API reference",source:"@site/docs/04_web/05_micro-front-ends/07_foundation-login.md",sourceDirName:"04_web/05_micro-front-ends",slug:"/web/micro-front-ends/foundation-login",permalink:"/next/web/micro-front-ends/foundation-login",draft:!1,tags:[{label:"web",permalink:"/next/tags/web"},{label:"login",permalink:"/next/tags/login"},{label:"foundation login",permalink:"/next/tags/foundation-login"},{label:"frontend",permalink:"/next/tags/frontend"},{label:"ui",permalink:"/next/tags/ui"},{label:"micro-front-ends",permalink:"/next/tags/micro-front-ends"}],version:"current",sidebarPosition:7,frontMatter:{title:"Micro-front-ends - Foundation Login",sidebar_label:"Foundation login",Id:"front-end-foundation-login",keywords:["web","login","foundation login","frontend","ui","micro-front-ends"],tags:["web","login","foundation login","frontend","ui","micro-front-ends"]},sidebar:"frontendSidebar",previous:{title:"Profile Management",permalink:"/next/web/micro-front-ends/foundation-profile-management"},next:{title:"Foundation testing",permalink:"/next/web/testing/foundation-testing"}},p={},d=[{value:"API reference",id:"api-reference",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Login set-up",id:"login-set-up",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Username &amp; password",id:"username--password",level:3},{value:"SSO",id:"sso",level:3},{value:"Customising login",id:"customising-login",level:2},{value:"Enabled functionality",id:"enabled-functionality",level:3},{value:"Logo",id:"logo",level:3},{value:"Enable SSO",id:"enable-sso",level:3}],c={toc:d};function g(e){var n=e.components,l=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"foundation-login"},"Foundation Login"),(0,a.kt)("h2",{id:"api-reference"},"API reference"),(0,a.kt)("p",null,"API reference ",(0,a.kt)("a",{parentName:"p",href:"../foundation-login_apiref/"},"can be found here.")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This micro front-end includes a set of identity management functions: authentication (including via SSO) and password reset, for example. Many of the features can be turned on and off as desired, and parts of the login screen (such as the logo) can be customised."),(0,a.kt)("p",null,"An example of the main login screen: ",(0,a.kt)("br",null),"\n",(0,a.kt)("img",{alt:"Main login screen example",src:t(75353).Z,width:"335",height:"657"})),(0,a.kt)("p",null,"An example of authentication via SSO: ",(0,a.kt)("br",null),"\n",(0,a.kt)("img",{alt:"Main login screen example",src:t(78647).Z,width:"333",height:"476"})),(0,a.kt)("p",null,"An example of the forgotten password screen: ",(0,a.kt)("br",null),"\n",(0,a.kt)("img",{alt:"Main login screen example",src:t(97350).Z,width:"335",height:"356"})),(0,a.kt)("p",null,"An example of the change password screen: ",(0,a.kt)("br",null),"\n",(0,a.kt)("img",{alt:"Main login screen example",src:t(33470).Z,width:"333",height:"567"})),(0,a.kt)("p",null,"An example of the request account screen: ",(0,a.kt)("br",null),"\n",(0,a.kt)("img",{alt:"Main login screen example",src:t(53185).Z,width:"333",height:"625"})),(0,a.kt)("h2",{id:"login-set-up"},"Login set-up"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If you build a project upon one of the Genesis seed apps, then the ",(0,a.kt)("inlineCode",{parentName:"p"},"Login")," micro front-end will already be set-up for you.")),(0,a.kt)("p",null,"To enable this micro front-end in your application, follow the steps below."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add ",(0,a.kt)("inlineCode",{parentName:"li"},"@genesislcap/foundation-login")," as a dependency in your ",(0,a.kt)("strong",{parentName:"li"},"package.json")," file. Whenever you change the dependencies of your project, always you run the ",(0,a.kt)("inlineCode",{parentName:"li"},"$ npm run bootstrap")," command again. You can see more information on the ",(0,a.kt)("a",{parentName:"li",href:"/next/web/basics/package-json-basics"},"pacakge.json basics")," page.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  ...\n  "dependencies": {\n    "@genesislcap/foundation-login": "latest"\n  },\n  ...\n}\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This page assumes you're using the Routing systems that are part of ",(0,a.kt)("inlineCode",{parentName:"p"},"foundation-ui"),", and will cover set-up as part of that routing system.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the router configuration for your application, import the ",(0,a.kt)("inlineCode",{parentName:"li"},"Login")," class and the ",(0,a.kt)("inlineCode",{parentName:"li"},"Settings")," type. As shown in this example, you might want to import ",(0,a.kt)("inlineCode",{parentName:"li"},"Settings")," with an alias to avoid name clashes.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Login, Settings as LoginSettings } from '@genesislcap/foundation-login';\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Next you'll want to ensure that your router config uses your ",(0,a.kt)("inlineCode",{parentName:"li"},"LoginSettings")," as its generic type so you can configure the login route.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"export class MainRouterConfig extends RouterConfiguration<LoginSettings> {\n    ...\n}\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Then add the required config to the router config that you use. For example, you'll want to set up the ",(0,a.kt)("inlineCode",{parentName:"li"},"Login")," class to be used on the ",(0,a.kt)("inlineCode",{parentName:"li"},"/login")," route, and pass in its required settings. See ",(0,a.kt)("a",{parentName:"li",href:"#customising-login"},"customising login"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"{ path: '', redirect: 'login' },\n{\n    path: 'login',\n    element: Login,\n    title: 'Login',\n    name: 'login',\n    layout: loginLayout,\n    // Login settings that are defined in the LoginSettings type\n    settings: {\n        defaultRedirectUrl: 'protected',\n        public: true,\n        resetPassword: true,\n        forgotPassword: true,\n        requestAccount: true,\n        ssoToggle: true,\n        ssoEnable: false,\n    },\n    childRouters: true,\n},\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You'll also want to set up things like the ",(0,a.kt)("inlineCode",{parentName:"li"},"NavigationContributor")," in this class.")),(0,a.kt)("admonition",{title:"Example",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"An example of this and other required settings for the router configuration with regard to the login system can be found in the ",(0,a.kt)("a",{parentName:"p",href:"../foundation-login_apiref/foundation-login.login/#example"},"example in the API reference"),".")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The functionality of the Login class is configured via the settings block on its route, but the other routes will also have customisation on them too. The main options to set here are:")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"allowAutoAuth")," which will log the user back in onto the page when they navigate away if they already have an authenticated session")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"public")," which will indicate that a route doesn't require the user to be authenticated to view"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"{\n    path: 'admin',\n    element: Admin,\n    title: 'Admin',\n    name: 'admin',\n    settings: { allowAutoAuth: true },\n},\n{\n    path: 'info',\n    element: Info,\n    title: 'Info',\n    name: 'info',\n    settings: { public: true },\n},\n")),(0,a.kt)("admonition",{title:"Warning",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"By default, a route that isn't marked public is not. However, a non-public route isn't going to block non-authenticated users automatically from viewing them. This must be impelmented in the ",(0,a.kt)("inlineCode",{parentName:"p"},"NavigationContributor"),", as shown in the ",(0,a.kt)("a",{parentName:"p",href:"../foundation-login_apiref/foundation-login.login/#example"},"previously mentioned example"),".")),(0,a.kt)("h2",{id:"authentication"},"Authentication"),(0,a.kt)("p",null,"For authentication, most configuration is set in the back end. You should familiarise yourself with the ",(0,a.kt)("a",{parentName:"p",href:"/next/server/access-control/introduction"},"authentication section of the back-end"),"."),(0,a.kt)("h3",{id:"username--password"},"Username & password"),(0,a.kt)("p",null,"The standard authentication method is the user supplying their username and password. Even when SSO is enabled as an authentication method, the user will still have the option to sign in with their normal credentials."),(0,a.kt)("admonition",{title:"Tip",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"DEFAULT_USER")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"DEFAULT_PASSWORD")," environment variables will automatically populate the credentials in the login form, which can be useful during development so developers don't need to write out their credentials continuously.")),(0,a.kt)("h3",{id:"sso"},"SSO"),(0,a.kt)("p",null,"SSO functionality allows the ",(0,a.kt)("inlineCode",{parentName:"p"},"Login")," micro front-end to work with your company's existing authentication system, enabling them to have a single set of credentials - incluidng those built on the Genesis low-code platform. Genesis supports SSO with both JWT and SAML."),(0,a.kt)("p",null,"Setting up SSO is primarily ",(0,a.kt)("a",{parentName:"p",href:"/next/server/access-control/SSO-authentication"},"a back-end task"),"; however, there is a small amount of configuration covered in ",(0,a.kt)("a",{parentName:"p",href:"#enable-sso"},"the customisation part of this documentation"),"."),(0,a.kt)("admonition",{title:"Info",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The standard process of SSO is that the SSO authentication provider flow is opened via a redirect in the current page. However, many authentication providers block their system when running in an iframe to prevent ",(0,a.kt)("a",{parentName:"p",href:"https://owasp.org/www-community/attacks/Clickjacking"},"clickjacking attacks"),". Because of this, if the ",(0,a.kt)("inlineCode",{parentName:"p"},"Login")," micro front-end detects that it is running in an iframe, it opens up the authentication provider in a popup instead.")),(0,a.kt)("h2",{id:"customising-login"},"Customising login"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Login")," micro front-end uses a parameterless constructor. Therefore, the configuration needs to be set via the settings javascript object in the router, as shown in the ",(0,a.kt)("a",{parentName:"p",href:"#login-set-up"},"set-up step"),". See the full ",(0,a.kt)("a",{parentName:"p",href:"../foundation-login_apiref/foundation-login.settings/#remarks"},"settings API here"),"."),(0,a.kt)("h3",{id:"enabled-functionality"},"Enabled functionality"),(0,a.kt)("p",null,"In the ",(0,a.kt)("a",{parentName:"p",href:"#introduction"},"introduction section"),", the reset password, request account, and forgotten password functionalities are shown. However, these flows must be enabled with the ",(0,a.kt)("inlineCode",{parentName:"p"},"resetPassword"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"requestAccount"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"forgotPassword")," options."),(0,a.kt)("h3",{id:"logo"},"Logo"),(0,a.kt)("p",null,"You will probably want to use your company's logo instead of the Genesis logo. A custom logo can be configured with the ",(0,a.kt)("inlineCode",{parentName:"p"},"logoSrc"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"logoWidth"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"logoHeight")," settings. If you don't want to use a logo, you can instead hide the logo with ",(0,a.kt)("inlineCode",{parentName:"p"},"hideLogo"),"."),(0,a.kt)("h3",{id:"enable-sso"},"Enable SSO"),(0,a.kt)("p",null,"As mentioned in the ",(0,a.kt)("a",{parentName:"p",href:"#sso"},"authentication")," section, SSO must be configured on the server, but some front-end configuration is required too. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Setting ",(0,a.kt)("inlineCode",{parentName:"p"},"ssoToggle")," is required to enable the SSO authentication as an option for the user; the user can then enable that flow with a checkbox that controls ",(0,a.kt)("inlineCode",{parentName:"p"},"ssoEnable"),". ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Enabling ",(0,a.kt)("inlineCode",{parentName:"p"},"ssoEnable")," at the route-level sets the SSO flow to be the default.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Finally, set ",(0,a.kt)("inlineCode",{parentName:"p"},"defaultRedirectUrl"),", which controls where the ",(0,a.kt)("inlineCode",{parentName:"p"},"Login")," micro front-end will take the user back to once they complete the SSO journey. For example, setting option to ",(0,a.kt)("inlineCode",{parentName:"p"},"/home")," will take the user to the ",(0,a.kt)("inlineCode",{parentName:"p"},"/home")," path if they successfully login via SSO."))))}g.isMDXComponent=!0},33470:function(e,n,t){n.Z=t.p+"assets/images/foundation-login_change-password-b8394762429b4059910dffb403150f3a.png"},97350:function(e,n,t){n.Z=t.p+"assets/images/foundation-login_forgotten-password-cb369a94a8d541942d20339eecec8ea4.png"},78647:function(e,n,t){n.Z=t.p+"assets/images/foundation-login_login-sso-7ee3a5a8e54efbff995f3357246d8f27.png"},75353:function(e,n,t){n.Z=t.p+"assets/images/foundation-login_login-standard-75a79d27e0d202491cb32c3d02b4b044.png"},53185:function(e,n,t){n.Z=t.p+"assets/images/foundation-login_request-account-5f0f181b3fa953e71a97f85f5dd2f9a3.png"}}]);