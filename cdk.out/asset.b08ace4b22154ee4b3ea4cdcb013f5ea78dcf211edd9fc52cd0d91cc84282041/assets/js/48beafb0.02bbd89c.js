"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[52678],{25345:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return d}});var i=a(87462),n=a(63366),r=(a(67294),a(3905)),s=(a(61839),["components"]),o={id:"intro",title:"Introduction",sidebar_label:"Introduction",sidebar_position:1},l="Building a data pipeline application",u={unversionedId:"getting-started/use-cases/postgres-data-pipeline/intro",id:"getting-started/use-cases/postgres-data-pipeline/intro",title:"Introduction",description:"This tutorial will guide you through creating a Genesis application that will ingest data from a PostgreSQL server to the Genesis platform.",source:"@site/docs/01_getting-started/05_use-cases/postgres-data-pipeline/index.md",sourceDirName:"01_getting-started/05_use-cases/postgres-data-pipeline",slug:"/getting-started/use-cases/postgres-data-pipeline/",permalink:"/next/getting-started/use-cases/postgres-data-pipeline/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",title:"Introduction",sidebar_label:"Introduction",sidebar_position:1},sidebar:"learningSidebar",previous:{title:"Run the application",permalink:"/next/getting-started/use-cases/faster_quick-start/run-the-application"},next:{title:"Create Genesis Dictionary",permalink:"/next/getting-started/use-cases/postgres-data-pipeline/dictionary"}},p={},d=[{value:"The scenario",id:"the-scenario",level:2}],c={toc:d};function g(e){var t=e.components,o=(0,n.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"building-a-data-pipeline-application"},"Building a data pipeline application"),(0,r.kt)("p",null,"This tutorial will guide you through creating a Genesis application that will ingest data from a PostgreSQL server to the Genesis platform."),(0,r.kt)("p",null,"Before you follow this tutorial, you need to have the Genesis low-code platform and your development environment fully installed, and you need to be familiar with the key information from the ",(0,r.kt)("a",{parentName:"p",href:"/getting-started/quick-start/"},"quick start guide"),". You will also need to have a PostgreSQL server set up that will be used as a source for the data. The Postgres server has to meet the ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/data-pipeline/advanced/#postgresql-configuration-1"},"required configuration")," to be able to capture changes. If you start PostgreSQL from a Docker image check the notes ",(0,r.kt)("a",{parentName:"p",href:"/server/integration/data-pipeline/configuring-runtime/#starting-source-postgresql-as-a-docker-image"},"here"),"."),(0,r.kt)("p",null,"In short, you need to understand:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"/getting-started/learn-the-basics/simple-introduction/"},"overall architecture of a Genesis application")),(0,r.kt)("li",{parentName:"ul"},"How to create a new project")),(0,r.kt)("h2",{id:"the-scenario"},"The scenario"),(0,r.kt)("p",null,"We want to build an application that will stream newly created rows from our remote PostgreSQL server to the Genesis platform. These are the application requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each row will represent a trade"),(0,r.kt)("li",{parentName:"ul"},"Each trade has an associated instrument"),(0,r.kt)("li",{parentName:"ul"},"The instrument data is pre-existing in the Genesis platform so the actual instrument can be looked up"),(0,r.kt)("li",{parentName:"ul"},"If the instrument doesn't exist it gets created on the fly and the newly created instrument gets associated with the trade")),(0,r.kt)("p",null,"Here is a high-level view of what we are going to build:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(17588).Z,width:"1392",height:"718"})),(0,r.kt)("p",null,"Working through the tutorial will show you:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"how to integrate with an external data source using the Genesis Data Pipeline configuration")))}g.isMDXComponent=!0},17588:function(e,t,a){t.Z=a.p+"assets/images/postgres-data-pipeline-tutorial-fc9d2061a311101c1b5cced60044baf1.jpg"}}]);