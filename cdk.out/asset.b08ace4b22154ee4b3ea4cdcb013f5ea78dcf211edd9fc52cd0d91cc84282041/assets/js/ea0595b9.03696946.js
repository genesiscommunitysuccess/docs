"use strict";(self.webpackChunk_genesislcap_docs=self.webpackChunk_genesislcap_docs||[]).push([[93765],{17757:function(e,a,t){t.r(a),t.d(a,{assets:function(){return b},contentTitle:function(){return d},default:function(){return p},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return o}});var s=t(87462),r=t(63366),n=(t(67294),t(3905)),i=(t(61839),["components"]),l={title:"Data Structures - Tables",sidebar_label:"Tables",id:"tables",keywords:["database","data structures","tables"],tags:["database","data structures","tables"]},d=void 0,u={unversionedId:"database/data-structures/tables",id:"database/data-structures/tables",title:"Data Structures - Tables",description:"A table is a data structure that organises data into rows and columns.",source:"@site/docs/02_database/03_data-structures/01_tables.md",sourceDirName:"02_database/03_data-structures",slug:"/database/data-structures/tables",permalink:"/next/database/data-structures/tables",draft:!1,tags:[{label:"database",permalink:"/next/tags/database"},{label:"data structures",permalink:"/next/tags/data-structures"},{label:"tables",permalink:"/next/tags/tables"}],version:"current",sidebarPosition:1,frontMatter:{title:"Data Structures - Tables",sidebar_label:"Tables",id:"tables",keywords:["database","data structures","tables"],tags:["database","data structures","tables"]},sidebar:"databaseSidebar",previous:{title:"Data Structures",permalink:"/next/database/data-structures/data-structures"},next:{title:"Indices",permalink:"/next/database/data-structures/indices"}},b={},o=[{value:"Genesis tables",id:"genesis-tables",level:2},{value:"Requirements",id:"requirements",level:3}],c={toc:o};function p(e){var a=e.components,t=(0,r.Z)(e,i);return(0,n.kt)("wrapper",(0,s.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A ",(0,n.kt)("a",{parentName:"p",href:"/database/fields-tables-views/tables/"},"table")," is a data structure that organises data into rows and columns.\nHowever, in Genesis, a table is quite different."),(0,n.kt)("h2",{id:"genesis-tables"},"Genesis tables"),(0,n.kt)("p",null,"A Genesis table is an ",(0,n.kt)("em",{parentName:"p"},"abstraction")," of a table from a physical database. It is made up of ",(0,n.kt)("a",{parentName:"p",href:"/database/fields-tables-views/fields/"},"fields"),", ",(0,n.kt)("a",{parentName:"p",href:"/database/data-structures/indices/"},"indices")," and ",(0,n.kt)("a",{parentName:"p",href:"/database/fields-tables-views/tables/tables-advanced/#subtables"},"subtables")),(0,n.kt)("p",null,"This is great, because it means that changes to the database don't change the Genesis table."),(0,n.kt)("p",null,"So, that means that you could change the database technology without having to change the table definition. A good way of thinking of this is that ",(0,n.kt)("em",{parentName:"p"},"the table is on a different layer")," compared to the database."),(0,n.kt)("p",null,"Tables are defined in the ",(0,n.kt)("inlineCode",{parentName:"p"},"-tables-dictionary.kts")," files as discussed in our ",(0,n.kt)("a",{parentName:"p",href:"/database/fields-tables-views/tables/tables-basics"},"data model documentation"),". Table\nrecords can be represented as a ",(0,n.kt)("a",{parentName:"p",href:"/database/data-types/table-entities/"},"table entity"),", or as a ",(0,n.kt)("a",{parentName:"p",href:"/database/data-types/dbrecord/"},"DbRecord"),".\nThey support read, write and subscribe operations."),(0,n.kt)("h3",{id:"requirements"},"Requirements"),(0,n.kt)("p",null,"For a table to be valid in Genesis, it must include the following:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"unique table name"),(0,n.kt)("li",{parentName:"ul"},"unique ID"),(0,n.kt)("li",{parentName:"ul"},"At least one field to be the primary key")))}p.isMDXComponent=!0}}]);